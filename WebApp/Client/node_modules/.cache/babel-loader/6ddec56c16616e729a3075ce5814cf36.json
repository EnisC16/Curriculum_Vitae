{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enisc\\\\Desktop\\\\Verband Kulturzentren e.V\\\\WebApp\\\\Client\\\\src\\\\components\\\\Payment\\\\PayPalExpressCheckOut.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport scriptLoader from 'react-async-script-loader';\nimport PropTypes from 'prop-types';\nimport paypal from 'paypal-checkout';\n\nclass PaypalButton extends React.Component {\n  constructor(props) {\n    super(props);\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n    this.state = {\n      showButton: false,\n      env: 'sandbox',\n      // Or 'sandbox'\n      client: {\n        sandbox: 'AaD8da4Hl-J_wkpbDwFo64zfdfcV_i-jOw-fjw33UxhiaL3KddA6IRuPo842lXDV1gQhh2d4PR8ys18F',\n        // sandbox client ID\n        production: 'xxxxxxxxx' // production client ID\n\n      },\n      commit: true // Show a 'Pay Now' button\n\n    };\n  }\n\n  componentDidMount() {\n    const {\n      isScriptLoaded,\n      isScriptLoadSucceed\n    } = this.props;\n\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      this.setState({\n        showButton: true\n      });\n    }\n  }\n\n  componentWillReceiveProps({\n    isScriptLoaded,\n    isScriptLoadSucceed\n  }) {\n    if (!this.state.show) {\n      if (isScriptLoaded && !this.props.isScriptLoaded) {\n        if (isScriptLoadSucceed) {\n          this.setState({\n            showButton: true\n          });\n        } else {\n          console.log('Cannot load Paypal script!');\n          this.props.onError();\n        }\n      }\n    }\n  }\n\n  render() {\n    const payment = () => paypal.rest.payment.create(this.props.env, this.props.client, {\n      transactions: [{\n        amount: {\n          total: this.props.total,\n          currency: this.props.currency\n        }\n      }]\n    });\n\n    const onAuthorize = (data, actions) => actions.payment.execute().then(() => {\n      const payment = Object.assign({}, this.props.payment);\n      payment.paid = true;\n      payment.cancelled = false;\n      payment.payerID = data.payerID;\n      payment.paymentID = data.paymentID;\n      payment.paymentToken = data.paymentToken;\n      payment.returnUrl = data.returnUrl;\n      this.props.onSuccess(payment);\n    });\n\n    let ppbtn = '';\n\n    if (this.state.showButton) {\n      ppbtn = /*#__PURE__*/React.createElement(paypal.Button.react, {\n        env: this.state.env,\n        client: this.state.client,\n        payment: payment,\n        commit: true,\n        onAuthorize: onAuthorize,\n        onCancel: this.props.onCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, ppbtn);\n  }\n\n}\n\nPaypalButton.propTypes = {\n  currency: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  client: PropTypes.object.isRequired\n};\nPaypalButton.defaultProps = {\n  env: 'sandbox',\n  onSuccess: payment => {\n    console.log('The payment was succeeded!', payment);\n  },\n  onCancel: data => {\n    console.log('The payment was cancelled!', data);\n  },\n  onError: err => {\n    console.log('Error loading Paypal script!', err);\n  }\n};\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);","map":{"version":3,"sources":["C:/Users/enisc/Desktop/Verband Kulturzentren e.V/WebApp/Client/src/components/Payment/PayPalExpressCheckOut.js"],"names":["React","ReactDOM","scriptLoader","PropTypes","paypal","PaypalButton","Component","constructor","props","window","state","showButton","env","client","sandbox","production","commit","componentDidMount","isScriptLoaded","isScriptLoadSucceed","setState","componentWillReceiveProps","show","console","log","onError","render","payment","rest","create","transactions","amount","total","currency","onAuthorize","data","actions","execute","then","Object","assign","paid","cancelled","payerID","paymentID","paymentToken","returnUrl","onSuccess","ppbtn","onCancel","propTypes","string","isRequired","number","object","defaultProps","err"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport scriptLoader from 'react-async-script-loader';\r\nimport PropTypes from 'prop-types';\r\nimport paypal from 'paypal-checkout';\r\n \r\nclass PaypalButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    window.React = React;\r\n    window.ReactDOM = ReactDOM;\r\n    this.state = {\r\n      showButton: false,\r\n      env: 'sandbox', // Or 'sandbox'\r\n      client: {\r\n        sandbox:    'AaD8da4Hl-J_wkpbDwFo64zfdfcV_i-jOw-fjw33UxhiaL3KddA6IRuPo842lXDV1gQhh2d4PR8ys18F', // sandbox client ID\r\n        production: 'xxxxxxxxx' // production client ID\r\n      },\r\n      commit: true, // Show a 'Pay Now' button\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { isScriptLoaded, isScriptLoadSucceed } = this.props;\r\n    if (isScriptLoaded && isScriptLoadSucceed) {\r\n      this.setState({ showButton: true });\r\n    }\r\n  }\r\n  componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\r\n    if (!this.state.show) {\r\n      if (isScriptLoaded && !this.props.isScriptLoaded) {\r\n        if (isScriptLoadSucceed) {\r\n          this.setState({ showButton: true });\r\n        } else {\r\n          console.log('Cannot load Paypal script!');\r\n          this.props.onError();\r\n        }\r\n      }\r\n    }\r\n  }\r\n \r\n  render() {\r\n    const payment = () => paypal.rest.payment.create(this.props.env, this.props.client, {\r\n      transactions: [\r\n                    { amount: { total: this.props.total, currency: this.props.currency } },\r\n      ],\r\n    });\r\n \r\n    const onAuthorize = (data, actions) => actions.payment.execute().then(() => {\r\n      const payment = Object.assign({}, this.props.payment);\r\n      payment.paid = true;\r\n      payment.cancelled = false;\r\n      payment.payerID = data.payerID;\r\n      payment.paymentID = data.paymentID;\r\n      payment.paymentToken = data.paymentToken;\r\n      payment.returnUrl = data.returnUrl;\r\n      this.props.onSuccess(payment);\r\n    });\r\n \r\n    let ppbtn = '';\r\n    if (this.state.showButton) {\r\n      ppbtn = (<paypal.Button.react\r\n                env={this.state.env}\r\n                client={this.state.client}\r\n                payment={payment}\r\n                commit\r\n                onAuthorize={onAuthorize}\r\n                onCancel={this.props.onCancel}\r\n            />);\r\n    }\r\n    return <div>{ppbtn}</div>;\r\n  }\r\n}\r\n \r\nPaypalButton.propTypes = {\r\n  currency: PropTypes.string.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n \r\nPaypalButton.defaultProps = {\r\n  env: 'sandbox',\r\n  onSuccess: (payment) => {\r\n    console.log('The payment was succeeded!', payment);\r\n  },\r\n  onCancel: (data) => {\r\n    console.log('The payment was cancelled!', data);\r\n  },\r\n  onError: (err) => {\r\n    console.log('Error loading Paypal script!', err);\r\n  },\r\n};\r\n \r\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);"]},"metadata":{},"sourceType":"module"}