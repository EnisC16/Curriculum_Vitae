{"version":3,"sources":["../../src/scripts/Select.tsx"],"names":["Select","props","state","id","label","required","error","totalCols","cols","formElemProps","className","children","rprops","selectClassNames","Component","Option","pprops"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAKA;;AACA;;AACA;;;;;;;;;;IAcaA,M;;;;;AAGX,kBAAYC,KAAZ,EAA0C;AAAA;;AAAA;AACxC,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,EAAE,yBAAkB,iBAAlB;AAAJ,KAAb;AAFwC;AAGzC;;;;6BAEQ;AACP,UAAMA,EAAE,GAAG,KAAKF,KAAL,CAAWE,EAAX,IAAiB,KAAKD,KAAL,CAAWC,EAAvC;AADO,wBAEuD,KAAKF,KAF5D;AAAA,UAECG,KAFD,eAECA,KAFD;AAAA,UAEQC,QAFR,eAEQA,QAFR;AAAA,UAEkBC,KAFlB,eAEkBA,KAFlB;AAAA,UAEyBC,SAFzB,eAEyBA,SAFzB;AAAA,UAEoCC,IAFpC,eAEoCA,IAFpC;AAAA,UAE6CP,KAF7C;;AAGP,UAAIG,KAAK,IAAIC,QAAT,IAAqBC,KAArB,IAA8BC,SAA9B,IAA2CC,IAA/C,EAAqD;AACnD,YAAMC,aAAa,GAAG;AAAEN,UAAAA,EAAE,EAAFA,EAAF;AAAMC,UAAAA,KAAK,EAALA,KAAN;AAAaC,UAAAA,QAAQ,EAARA,QAAb;AAAuBC,UAAAA,KAAK,EAALA,KAAvB;AAA8BC,UAAAA,SAAS,EAATA,SAA9B;AAAyCC,UAAAA,IAAI,EAAJA;AAAzC,SAAtB;AACA,4BACE,gCAAC,wBAAD,EAAiBC,aAAjB,eACE,gCAAC,MAAD,kCAAiBR,KAAjB;AAAwBE,UAAAA,EAAE,EAAFA;AAAxB,WADF,CADF;AAKD;;AAVM,UAWCO,SAXD,GAWoCT,KAXpC,CAWCS,SAXD;AAAA,UAWYC,QAXZ,GAWoCV,KAXpC,CAWYU,QAXZ;AAAA,UAWyBC,MAXzB,6CAWoCX,KAXpC;AAYP,UAAMY,gBAAgB,GAAG,4BAAWH,SAAX,EAAsB,aAAtB,CAAzB;AACA,0BACE;AAAQ,QAAA,EAAE,EAAEP,EAAZ;AAAgB,QAAA,SAAS,EAAEU;AAA3B,SAAiDD,MAAjD,GACGD,QADH,CADF;AAKD;;;EA1ByBG,gB;;;iCAAfd,M,mBACY,I;;AA8BlB,IAAMe,MAA6B,GAAG,SAAhCA,MAAgC,CAACd,KAAD,EAAW;AAAA,MAC9CG,KAD8C,GACfH,KADe,CAC9CG,KAD8C;AAAA,MACvCO,QADuC,GACfV,KADe,CACvCU,QADuC;AAAA,MAC1BK,MAD0B,6CACff,KADe;AAEtD,sBAAO,0CAAYe,MAAZ,EAAqBZ,KAAK,IAAIO,QAA9B,CAAP;AACD,CAHM","sourcesContent":["import React, {\n  Component,\n  SelectHTMLAttributes,\n  OptionHTMLAttributes,\n} from 'react';\nimport classnames from 'classnames';\nimport { FormElement, FormElementProps } from './FormElement';\nimport { uuid } from './util';\n\nexport type SelectProps = {\n  label?: string;\n  required?: boolean;\n  totalCols?: number;\n  cols?: number;\n  error?: FormElementProps['error'];\n} & SelectHTMLAttributes<HTMLSelectElement>;\n\nexport type SelectState = {\n  id: string;\n};\n\nexport class Select extends Component<SelectProps, SelectState> {\n  static isFormElement = true;\n\n  constructor(props: Readonly<SelectProps>) {\n    super(props);\n    this.state = { id: `form-element-${uuid()}` };\n  }\n\n  render() {\n    const id = this.props.id || this.state.id;\n    const { label, required, error, totalCols, cols, ...props } = this.props;\n    if (label || required || error || totalCols || cols) {\n      const formElemProps = { id, label, required, error, totalCols, cols };\n      return (\n        <FormElement {...formElemProps}>\n          <Select {...{ ...props, id }} />\n        </FormElement>\n      );\n    }\n    const { className, children, ...rprops } = props;\n    const selectClassNames = classnames(className, 'slds-select');\n    return (\n      <select id={id} className={selectClassNames} {...rprops}>\n        {children}\n      </select>\n    );\n  }\n}\n\nexport type OptionProps = OptionHTMLAttributes<HTMLOptionElement>;\n\nexport const Option: React.FC<OptionProps> = (props) => {\n  const { label, children, ...pprops } = props;\n  return <option {...pprops}>{label || children}</option>;\n};\n"],"file":"Select.js"}