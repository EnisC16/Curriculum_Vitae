{"version":3,"sources":["../../src/scripts/SalesPath.tsx"],"names":["PathItem","itemKey","props","onSelect","className","eventKey","title","completedTitle","type","pathItemClassName","tabIndex","completedText","onItemClick","bind","React","Component","SalesPath","state","setState","activeKey","paths","typeTracker","Children","map","path","isActive","evaluatedType","children","defaultActiveKey","salesPathClassNames","renderSalesPath"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Icon } from './Icon';\n\nexport type PathItemProps = {\n  className?: string;\n  eventKey?: any;\n  type?: 'complete' | 'current' | 'incomplete';\n  title?: string;\n  completedTitle?: string;\n  onSelect?: (itemKey: any) => void;\n};\n\nclass PathItem extends React.Component<PathItemProps> {\n  onItemClick(itemKey: any) {\n    if (this.props.onSelect) {\n      this.props.onSelect(itemKey);\n    }\n  }\n\n  render() {\n    const { className, eventKey, title, completedTitle, type } = this.props;\n\n    const pathItemClassName = classnames(\n      'slds-tabs_path__item',\n      `slds-is-${type}`,\n      className\n    );\n\n    const tabIndex = type === 'current' ? 0 : -1;\n    const completedText = completedTitle || 'Stage Complete';\n\n    return (\n      <li className={pathItemClassName} role='presentation'>\n        <a\n          className='slds-tabs_path__link'\n          aria-selected='false'\n          tabIndex={tabIndex}\n          role='tab'\n          aria-live='assertive'\n          onClick={this.onItemClick.bind(this, eventKey)}\n        >\n          <span className='slds-tabs_path__stage'>\n            <Icon category='utility' icon='check' size='x-small' />\n            {type === 'complete' ? (\n              <span className='slds-assistive-text'>{completedText}</span>\n            ) : null}\n          </span>\n          <span className='slds-tabs_path__title'>{title}</span>\n        </a>\n      </li>\n    );\n  }\n}\n\nexport type SalesPathProps = {\n  className?: string;\n  defaultActiveKey?: any;\n  activeKey?: any;\n  onSelect?: (itemKey: any) => void;\n};\n\nexport type SalesPathState = {\n  activeKey?: any;\n};\n\nexport class SalesPath extends React.Component<SalesPathProps, SalesPathState> {\n  static PathItem = PathItem;\n\n  constructor(props: Readonly<SalesPathProps>) {\n    super(props);\n    this.state = {};\n\n    this.onItemClick = this.onItemClick.bind(this);\n  }\n\n  onItemClick(itemKey: any) {\n    if (this.props.onSelect) {\n      this.props.onSelect(itemKey);\n    }\n    // Uncontrolled\n    this.setState({ activeKey: itemKey });\n  }\n\n  renderSalesPath(activeKey: any, paths: any) {\n    let typeTracker = -1;\n\n    return React.Children.map(paths, (path) => {\n      const { eventKey, type, ...props } = path.props;\n      const isActive = eventKey === activeKey;\n\n      typeTracker = isActive ? 0 : typeTracker >= 0 ? 1 : -1;\n\n      const evaluatedType =\n        type ||\n        (isActive ? 'current' : typeTracker === -1 ? 'complete' : 'incomplete');\n\n      return (\n        <PathItem\n          eventKey={eventKey}\n          type={evaluatedType}\n          onSelect={this.onItemClick}\n          {...props}\n        />\n      );\n    });\n  }\n\n  render() {\n    const { className, children } = this.props;\n    const activeKey =\n      this.props.activeKey ||\n      this.state.activeKey ||\n      this.props.defaultActiveKey;\n\n    const salesPathClassNames = classnames(className, 'slds-tabs_path');\n    return (\n      <div className={salesPathClassNames} role='application tablist'>\n        <ul className='slds-tabs_path__nav' role='presentation'>\n          {this.renderSalesPath(activeKey, children)}\n        </ul>\n      </div>\n    );\n  }\n}\n"],"file":"SalesPath.js"}