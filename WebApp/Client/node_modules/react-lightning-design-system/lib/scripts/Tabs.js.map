{"version":3,"sources":["../../src/scripts/Tabs.tsx"],"names":["TabContent","props","className","active","children","pprops","tabClassNames","TabMenu","icon","DefaultTabItemRenderer","React","Children","only","TabItem","type","title","activeKey","eventKey","activeTabRef","menu","menuIcon","onTabClick","onTabKeyDown","menuItems","menuProps","isActive","tabItemClassName","tabLinkClassName","tabItemRenderer","TabItemRenderer","undefined","e","TabNav","tabs","tabNavClassName","map","tab","Tab","Tabs","tabKey","onSelect","setState","focusTab","keyCode","idx","tabKeys","forEach","i","push","dir","activeIdx","length","preventDefault","stopPropagation","state","el","activeTab","focus","tabsClassNames","defaultActiveKey","node","cloneElement","Component"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, ReactNode } from 'react';\nimport classnames from 'classnames';\nimport { registerStyle } from './util';\nimport { DropdownButton, DropdownButtonProps } from './DropdownButton';\n\nexport type TabContentProps = {\n  active?: boolean;\n} & HTMLAttributes<HTMLDivElement>;\n\n/**\n *\n */\nconst TabContent: React.FC<TabContentProps> = (props) => {\n  const { className, active, children, ...pprops } = props;\n  const tabClassNames = classnames(\n    className,\n    'slds-tabs__content',\n    `slds-${active ? 'show' : 'hide'}`\n  );\n  return (\n    <div className={tabClassNames} role='tabpanel' {...pprops}>\n      {children}\n    </div>\n  );\n};\n\nexport type TabMenuProps<MenuEventKey extends Key> = DropdownButtonProps<\n  MenuEventKey\n>;\n/**\n *\n */\nconst TabMenu = <MenuEventKey extends Key>(\n  props: TabMenuProps<MenuEventKey>\n) => {\n  const { icon = 'down', children, ...pprops } = props;\n  return (\n    <DropdownButton\n      className='react-slds-tab-menu'\n      icon={icon}\n      type='icon-bare'\n      iconSize='small'\n      nubbinTop\n      {...pprops}\n    >\n      {children}\n    </DropdownButton>\n  );\n};\n\nconst DefaultTabItemRenderer = (props: any) =>\n  React.Children.only(props.children);\n\ntype Key = string | number;\nexport type TabType = 'default' | 'scoped';\n\nexport type TabItemRendererProps<\n  EventKey extends Key = Key,\n  EventValueKey extends EventKey = EventKey\n> = {\n  type?: TabType;\n  title?: string;\n  menu?: JSX.Element;\n  menuItems?: JSX.Element[];\n  menuIcon?: string;\n  eventKey?: EventValueKey;\n  activeKey?: EventValueKey;\n  activeTabRef?: (node: HTMLAnchorElement) => void;\n  onTabClick?: (eventKey: EventKey) => void;\n  onTabKeyDown?: (\n    eventKey: EventKey,\n    e: React.KeyboardEvent<HTMLAnchorElement>\n  ) => void;\n  children?: React.ReactNode;\n  [key: string]: any;\n};\n\nexport type TabItemProps<\n  EventKey extends Key,\n  EventValueKey extends EventKey\n> = {\n  tabItemRenderer?: (\n    props: TabItemRendererProps<EventKey, EventValueKey>\n  ) => JSX.Element;\n} & TabItemRendererProps<EventKey, EventValueKey>;\n\n/**\n *\n */\nconst TabItem = <EventKey extends Key, EventValueKey extends EventKey>(\n  props: TabItemProps<EventKey, EventValueKey>\n) => {\n  const {\n    type,\n    title,\n    activeKey,\n    eventKey,\n    activeTabRef,\n    menu,\n    menuIcon,\n    onTabClick,\n    onTabKeyDown,\n  } = props;\n  let { menuItems } = props;\n  menuItems = menu ? menu.props.children : menuItems;\n  const menuProps = menu ? menu.props : {};\n  const isActive = eventKey === activeKey;\n  const tabItemClassName = classnames(\n    { 'slds-tabs__item': !!menuItems },\n    `slds-tabs_${type}__item`,\n    { 'slds-active': isActive },\n    { 'react-slds-tab-with-menu': menu || menuItems }\n  );\n  const tabLinkClassName = `slds-tabs_${type}__link`;\n  const {\n    tabItemRenderer: TabItemRenderer = DefaultTabItemRenderer,\n    ...pprops\n  } = props;\n  return (\n    <li className={tabItemClassName} role='presentation'>\n      <TabItemRenderer {...pprops}>\n        <span className='react-slds-tab-item-content'>\n          <a\n            className={tabLinkClassName}\n            role='tab'\n            ref={isActive ? activeTabRef : undefined}\n            tabIndex={isActive ? 0 : -1}\n            aria-selected={isActive}\n            onClick={() =>\n              onTabClick && eventKey != null && onTabClick(eventKey)\n            }\n            onKeyDown={(e) =>\n              onTabKeyDown && eventKey != null && onTabKeyDown(eventKey, e)\n            }\n          >\n            {title}\n          </a>\n          {menuItems ? (\n            <TabMenu icon={menuIcon} {...menuProps}>\n              {menuItems}\n            </TabMenu>\n          ) : (\n            undefined\n          )}\n        </span>\n      </TabItemRenderer>\n    </li>\n  );\n};\n\nexport type TabNavProps<\n  EventKey extends Key,\n  EventValueKey extends EventKey\n> = {\n  type?: TabType;\n  activeKey?: EventValueKey;\n  tabs?: ReactNode;\n  activeTabRef?: (node: HTMLAnchorElement) => void;\n  onTabClick?: (eventKey: EventKey) => void;\n  onTabKeyDown?: (\n    eventKey: EventKey,\n    e: React.KeyboardEvent<HTMLAnchorElement>\n  ) => void;\n};\n/**\n *\n */\nconst TabNav = <EventKey extends Key, EventValueKey extends EventKey>(\n  props: TabNavProps<EventKey, EventValueKey>\n) => {\n  const {\n    type,\n    tabs,\n    activeKey,\n    activeTabRef,\n    onTabClick,\n    onTabKeyDown,\n  } = props;\n  const tabNavClassName = `slds-tabs_${type}__nav`;\n  return (\n    <ul className={tabNavClassName} role='tablist'>\n      {React.Children.map(tabs, (tab: any) => (\n        <TabItem\n          {...tab.props}\n          type={type}\n          activeKey={activeKey}\n          activeTabRef={activeTabRef}\n          onTabClick={onTabClick}\n          onTabKeyDown={onTabKeyDown}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport type TabProps<EventKey extends Key, EventValueKey extends EventKey> = {\n  className?: string;\n  eventKey?: EventValueKey;\n  activeKey?: EventValueKey;\n} & TabItemProps<EventKey, EventValueKey>;\n\n/**\n *\n */\nexport const Tab = <EventKey extends Key, EventValueKey extends EventKey>(\n  props: TabProps<EventKey, EventValueKey>\n) => {\n  const { className, eventKey, activeKey, children } = props;\n  return (\n    <TabContent className={className} active={eventKey === activeKey}>\n      {children}\n    </TabContent>\n  );\n};\n\nexport type TabsProps<EventKey extends Key, EventValueKey extends EventKey> = {\n  className?: string;\n  type?: TabType;\n  defaultActiveKey?: EventValueKey;\n  activeKey?: EventValueKey;\n  onSelect?: (tabKey: EventKey) => void;\n};\n\nexport type TabsState<EventKey extends Key> = {\n  focusTab?: boolean;\n  activeKey?: EventKey;\n};\n/**\n *\n */\nexport class Tabs<\n  EventKey extends Key,\n  EventValueKey extends EventKey\n> extends Component<TabsProps<EventKey, EventValueKey>, TabsState<EventKey>> {\n  activeTab: HTMLAnchorElement | null = null;\n\n  constructor(props: Readonly<TabsProps<EventKey, EventValueKey>>) {\n    super(props);\n    this.state = {};\n    registerStyle('tab-menu', [\n      [\n        '.slds-tabs__item.react-slds-tab-with-menu',\n        '{ position: relative !important; overflow: visible !important; }',\n      ],\n      [\n        '.slds-tabs__item.react-slds-tab-with-menu > .react-slds-tab-item-content',\n        '{ overflow: hidden }',\n      ],\n      [\n        '.slds-tabs__item.react-slds-tab-with-menu > .react-slds-tab-item-content > a',\n        '{ padding-right: 2rem; }',\n      ],\n      ['.react-slds-tab-menu', '{ position: absolute; top: 0; right: 0; }'],\n      [\n        '.react-slds-tab-menu button',\n        '{ height: 2.5rem; line-height: 2rem; width: 2rem; visibility: hidden; justify-content: center }',\n      ],\n      [\n        '.slds-tabs__item.slds-active .react-slds-tab-menu button',\n        '.slds-tabs__item:hover .react-slds-tab-menu button',\n        '.slds-tabs__item .react-slds-tab-menu button:focus',\n        '{ visibility: visible }',\n      ],\n    ]);\n  }\n\n  componentDidUpdate() {\n    if (this.state.focusTab) {\n      const el = this.activeTab;\n      if (el) {\n        el.focus();\n      }\n      /* eslint-disable react/no-did-update-set-state */\n      this.setState({ focusTab: false });\n    }\n  }\n\n  onTabClick = (tabKey: EventKey) => {\n    if (this.props.onSelect) {\n      this.props.onSelect(tabKey);\n    }\n    // Uncontrolled\n    this.setState({ activeKey: tabKey, focusTab: true });\n  };\n\n  onTabKeyDown = (\n    tabKey: EventKey,\n    e: React.KeyboardEvent<HTMLAnchorElement>\n  ) => {\n    if (e.keyCode === 37 || e.keyCode === 39) {\n      // left/right cursor key\n      let idx = 0;\n      const tabKeys: EventKey[] = [];\n      React.Children.forEach(this.props.children, (tab: any, i) => {\n        tabKeys.push(tab.props.eventKey);\n        if (tabKey === tab.props.eventKey) {\n          idx = i;\n        }\n      });\n      const dir = e.keyCode === 37 ? -1 : 1;\n      const activeIdx = (idx + dir + tabKeys.length) % tabKeys.length;\n      const activeKey = tabKeys[activeIdx];\n      this.onTabClick(activeKey);\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  render() {\n    const { className, children } = this.props;\n    const type = this.props.type === 'scoped' ? 'scoped' : 'default';\n    const tabsClassNames = classnames(className, `slds-tabs_${type}`);\n    const activeKey =\n      typeof this.props.activeKey !== 'undefined'\n        ? this.props.activeKey\n        : typeof this.state.activeKey !== 'undefined'\n        ? this.state.activeKey\n        : this.props.defaultActiveKey;\n    return (\n      <div className={tabsClassNames}>\n        <TabNav\n          type={type}\n          activeKey={activeKey}\n          activeTabRef={(node) => {\n            this.activeTab = node;\n          }}\n          tabs={children}\n          onTabClick={this.onTabClick}\n          onTabKeyDown={this.onTabKeyDown}\n        />\n        {React.Children.map(children, (tab: any) =>\n          React.cloneElement(tab, { activeKey })\n        )}\n      </div>\n    );\n  }\n}\n"],"file":"Tabs.js"}