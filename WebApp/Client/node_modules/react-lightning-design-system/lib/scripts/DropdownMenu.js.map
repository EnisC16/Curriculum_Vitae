{"version":3,"sources":["../../src/scripts/DropdownMenu.tsx"],"names":["DropdownMenuHeader","divider","className","children","menuHeaderClass","MenuHeader","DropdownMenuHandlerContext","DropdownMenuItemInner","e","keyCode","preventDefault","stopPropagation","onMenuItemClick","currentEl","currentTarget","parentElement","itemEl","nextSibling","previousSibling","anchorEl","querySelector","disabled","focus","props","onClick","eventKey","onMenuSelect","onBlur","onMenuBlur","onFocus","onMenuFocus","label","icon","iconRight","selected","tabIndex","menuItemClass","undefined","onMenuItemBlur","onMenuItemFocus","onKeyDown","Component","DropdownMenuItem","handlers","MenuItem","DropdownMenuInner","onMenuClose","alignment","size","header","nubbinTop","hoverPopup","style","dropdownMenuRef","rprops","nubbin","vertAlign","align","nubbinPosition","dropdownClassNames","handleDOMRef","node","outline","getDropdownContext","preventPortalizeOnHoverPopup","Cmp","DropdownMenu","triggerSelector","alignmentStyle"],"mappings":"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","sourcesContent":["import React, {\n  Component,\n  ComponentType,\n  AnchorHTMLAttributes,\n  FocusEvent,\n  KeyboardEvent,\n  HTMLAttributes,\n  SyntheticEvent,\n  createContext,\n} from 'react';\nimport classnames from 'classnames';\nimport { Icon } from './Icon';\nimport { autoAlign, InjectedProps, AutoAlignProps } from './AutoAlign';\n\nexport type DropdownMenuHeaderProps = {\n  className?: string;\n  divider?: 'top' | 'bottom';\n};\n\nexport const DropdownMenuHeader: React.FC<DropdownMenuHeaderProps> = ({\n  divider,\n  className,\n  children,\n}) => {\n  const menuHeaderClass = classnames(\n    'slds-dropdown__header',\n    { [`slds-has-divider_${divider}-space`]: divider },\n    className\n  );\n  return (\n    <div className={menuHeaderClass}>\n      <span className='slds-text-heading_label'>{children}</span>\n    </div>\n  );\n};\n\nexport const MenuHeader = DropdownMenuHeader;\n\ntype DropdownMenuHandler<EventKey extends Key> = {\n  onMenuSelect: (eventKey: EventKey) => void;\n  onMenuFocus: (e: FocusEvent<HTMLElement>) => void;\n  onMenuBlur: (e: FocusEvent<HTMLElement>) => void;\n};\n\nexport const DropdownMenuHandlerContext = createContext<\n  DropdownMenuHandler<Key>\n>(null as any);\n\nexport type DropdownMenuItemProps = {\n  label?: string;\n  eventKey?: string | number;\n  icon?: string;\n  iconRight?: string;\n  disabled?: boolean;\n  divider?: 'top' | 'bottom';\n  selected?: boolean;\n  onClick?: (e: SyntheticEvent<HTMLElement>) => void;\n} & Omit<AnchorHTMLAttributes<HTMLAnchorElement>, 'onClick'>;\n\nclass DropdownMenuItemInner extends Component<\n  DropdownMenuItemProps & DropdownMenuHandler<Key>\n> {\n  onKeyDown = (e: KeyboardEvent<HTMLAnchorElement>) => {\n    if (e.keyCode === 13 || e.keyCode === 32) {\n      // return or space\n      e.preventDefault();\n      e.stopPropagation();\n      this.onMenuItemClick(e);\n    } else if (e.keyCode === 40 || e.keyCode === 38) {\n      e.preventDefault();\n      e.stopPropagation();\n      const currentEl = e.currentTarget.parentElement;\n      let itemEl: any = currentEl\n        ? e.keyCode === 40\n          ? currentEl.nextSibling\n          : currentEl.previousSibling\n        : null;\n      while (itemEl) {\n        const anchorEl = itemEl.querySelector('.react-slds-menuitem[tabIndex]');\n        if (anchorEl && !anchorEl.disabled) {\n          anchorEl.focus();\n          return;\n        }\n        itemEl = e.keyCode === 40 ? itemEl.nextSibling : itemEl.previousSibling;\n      }\n    }\n  };\n\n  onMenuItemClick = (e: SyntheticEvent<HTMLAnchorElement>) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n    if (this.props.eventKey != null) {\n      this.props.onMenuSelect(this.props.eventKey);\n    }\n  };\n\n  onMenuItemBlur = (e: FocusEvent<HTMLAnchorElement>) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n    if (this.props.onMenuBlur) {\n      this.props.onMenuBlur(e);\n    }\n  };\n\n  onMenuItemFocus = (e: FocusEvent<HTMLAnchorElement>) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n    if (this.props.onMenuFocus) {\n      this.props.onMenuFocus(e);\n    }\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      className,\n      label,\n      icon,\n      iconRight,\n      selected,\n      disabled,\n      divider,\n      tabIndex = 0,\n      eventKey,\n      onClick,\n      onBlur,\n      onFocus,\n      onMenuSelect,\n      onMenuBlur,\n      onMenuFocus,\n      children,\n      ...props\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const menuItemClass = classnames(\n      'slds-dropdown__item',\n      {\n        'slds-is-selected': selected,\n        [`slds-has-divider_${divider}-space`]: divider,\n      },\n      className\n    );\n    return (\n      <li className={menuItemClass}>\n        {/* eslint-disable-next-line jsx-a11y/interactive-supports-focus */}\n        <a\n          role='menuitem'\n          {...props}\n          className='slds-truncate react-slds-menuitem'\n          aria-disabled={disabled}\n          tabIndex={disabled ? undefined : tabIndex}\n          onClick={disabled ? undefined : this.onMenuItemClick}\n          onBlur={disabled ? undefined : this.onMenuItemBlur}\n          onFocus={disabled ? undefined : this.onMenuItemFocus}\n          onKeyDown={disabled ? undefined : this.onKeyDown}\n        >\n          <p className='slds-truncate'>\n            {icon ? <Icon icon={icon} size='x-small' align='left' /> : null}\n            {label || children}\n          </p>\n          {iconRight ? (\n            <Icon icon={iconRight} size='x-small' align='right' />\n          ) : null}\n        </a>\n      </li>\n    );\n  }\n}\n\nexport const DropdownMenuItem = (props: DropdownMenuItemProps) => {\n  return (\n    <DropdownMenuHandlerContext.Consumer>\n      {(handlers) => <DropdownMenuItemInner {...props} {...handlers} />}\n    </DropdownMenuHandlerContext.Consumer>\n  );\n};\n\nexport const MenuItem = DropdownMenuItem;\n\ntype Key = string | number;\n\nexport type DropdownMenuProps<EventKey extends Key> = HTMLAttributes<\n  HTMLElement\n> & {\n  size?: 'small' | 'medium' | 'large';\n  header?: string;\n  nubbin?:\n    | 'top'\n    | 'top left'\n    | 'top right'\n    | 'bottom'\n    | 'bottom left'\n    | 'bottom right'\n    | 'auto';\n  nubbinTop?: boolean; // for backward compatibility. use nubbin instead\n  hoverPopup?: boolean;\n  onMenuSelect?: (eventKey: EventKey) => void;\n  onMenuClose?: () => void;\n  dropdownMenuRef?: (node: HTMLDivElement) => void;\n};\n\nclass DropdownMenuInner<EventKey extends Key> extends Component<\n  DropdownMenuProps<EventKey> & InjectedProps\n> {\n  node: HTMLDivElement | null = null;\n\n  handlers: DropdownMenuHandler<EventKey> | null = null;\n\n  onKeyDown = (e: KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 27) {\n      // ESC\n      if (this.props.onMenuClose) {\n        this.props.onMenuClose();\n      }\n    }\n  };\n\n  onMenuSelect = (eventKey: EventKey) => {\n    if (this.props.onMenuSelect) {\n      this.props.onMenuSelect(eventKey);\n    }\n  };\n\n  onMenuFocus = (e: FocusEvent<HTMLElement>) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  onMenuBlur = (e: FocusEvent<HTMLElement>) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  };\n\n  getDropdownContext = () => {\n    if (!this.handlers) {\n      this.handlers = {\n        onMenuSelect: this.onMenuSelect,\n        onMenuBlur: this.onMenuBlur,\n        onMenuFocus: this.onMenuFocus,\n      };\n    }\n    return this.handlers as DropdownMenuHandler<Key>;\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      className,\n      alignment,\n      size,\n      header,\n      nubbinTop,\n      hoverPopup,\n      children,\n      style,\n      dropdownMenuRef,\n      onFocus,\n      onBlur,\n      onMenuSelect,\n      onMenuClose,\n      ...rprops\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const nubbin = nubbinTop ? 'auto' : this.props.nubbin;\n    const [vertAlign, align] = alignment;\n    const nubbinPosition = nubbin === 'auto' ? `${vertAlign}-${align}` : nubbin;\n    const dropdownClassNames = classnames(\n      className,\n      'slds-dropdown',\n      vertAlign ? `slds-dropdown_${vertAlign}` : undefined,\n      align ? `slds-dropdown_${align}` : undefined,\n      size ? `slds-dropdown_${size}` : undefined,\n      nubbinPosition ? `slds-nubbin_${nubbinPosition}` : undefined,\n      { 'react-slds-no-hover-popup': !hoverPopup }\n    );\n    const handleDOMRef = (node: HTMLDivElement) => {\n      this.node = node;\n      if (dropdownMenuRef) {\n        dropdownMenuRef(node);\n      }\n    };\n    return (\n      <div\n        className={dropdownClassNames}\n        ref={handleDOMRef}\n        style={{ outline: 'none', ...style }}\n        onKeyDown={this.onKeyDown}\n        tabIndex={-1}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        {...rprops}\n      >\n        {header ? <MenuHeader>{header}</MenuHeader> : null}\n        <ul className='slds-dropdown__list' role='menu'>\n          <DropdownMenuHandlerContext.Provider\n            value={this.getDropdownContext()}\n          >\n            {children}\n          </DropdownMenuHandlerContext.Provider>\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction preventPortalizeOnHoverPopup<EventKey extends Key>(\n  Cmp: ComponentType<DropdownMenuProps<EventKey> & AutoAlignProps>\n) {\n  type ResultProps = DropdownMenuProps<EventKey> & AutoAlignProps;\n  return (props: ResultProps) => (\n    <Cmp preventPortalize={!!props.hoverPopup} {...props} />\n  );\n}\n\ntype DropdownMenuType = <EventKey extends Key>(\n  props: DropdownMenuProps<EventKey> & AutoAlignProps\n) => JSX.Element;\n\nexport const DropdownMenu: DropdownMenuType = preventPortalizeOnHoverPopup(\n  autoAlign({\n    triggerSelector: '.slds-dropdown-trigger',\n    alignmentStyle: 'menu',\n  })(DropdownMenuInner)\n) as DropdownMenuType;\n"],"file":"DropdownMenu.js"}