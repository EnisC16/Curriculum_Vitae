{"version":3,"sources":["../../src/scripts/Textarea.tsx"],"names":["Textarea","props","state","id","label","required","error","totalCols","cols","formElemProps","className","textareaRef","pprops","taClassNames","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;IAeaA,Q;;;;;AAGX,oBAAYC,KAAZ,EAA4C;AAAA;;AAAA;AAC1C,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,EAAE,yBAAkB,iBAAlB;AAAJ,KAAb;AAF0C;AAG3C;;;;6BAEQ;AACP,UAAMA,EAAE,GAAG,KAAKF,KAAL,CAAWE,EAAX,IAAiB,KAAKD,KAAL,CAAWC,EAAvC;AADO,wBAEuD,KAAKF,KAF5D;AAAA,UAECG,KAFD,eAECA,KAFD;AAAA,UAEQC,QAFR,eAEQA,QAFR;AAAA,UAEkBC,KAFlB,eAEkBA,KAFlB;AAAA,UAEyBC,SAFzB,eAEyBA,SAFzB;AAAA,UAEoCC,IAFpC,eAEoCA,IAFpC;AAAA,UAE6CP,KAF7C;;AAGP,UAAIG,KAAK,IAAIC,QAAT,IAAqBC,KAArB,IAA8BC,SAA9B,IAA2CC,IAA/C,EAAqD;AACnD,YAAMC,aAAa,GAAG;AAAEN,UAAAA,EAAE,EAAFA,EAAF;AAAMC,UAAAA,KAAK,EAALA,KAAN;AAAaC,UAAAA,QAAQ,EAARA,QAAb;AAAuBC,UAAAA,KAAK,EAALA,KAAvB;AAA8BC,UAAAA,SAAS,EAATA,SAA9B;AAAyCC,UAAAA,IAAI,EAAJA;AAAzC,SAAtB;AACA,4BACE,gCAAC,wBAAD,EAAiBC,aAAjB,eACE,gCAAC,QAAD,kCAAmBR,KAAnB;AAA0BE,UAAAA,EAAE,EAAFA;AAA1B,WADF,CADF;AAKD;;AAVM,UAWCO,SAXD,GAWuCT,KAXvC,CAWCS,SAXD;AAAA,UAWYC,WAXZ,GAWuCV,KAXvC,CAWYU,WAXZ;AAAA,UAW4BC,MAX5B,6CAWuCX,KAXvC;AAYP,UAAMY,YAAY,GAAG,4BAAWH,SAAX,EAAsB,YAAtB,CAArB;AACA,0BACE;AACE,QAAA,EAAE,EAAEP,EADN;AAEE,QAAA,GAAG,EAAEQ,WAFP;AAGE,QAAA,SAAS,EAAEE;AAHb,SAIMD,MAJN,EADF;AAQD;;;EA7B2BE,gB;;;iCAAjBd,Q,mBACY,I","sourcesContent":["import React, { Component, TextareaHTMLAttributes } from 'react';\nimport classnames from 'classnames';\nimport { FormElement, FormElementProps } from './FormElement';\nimport { uuid } from './util';\n\nexport type TextareaProps = {\n  label?: string;\n  required?: boolean;\n  error?: FormElementProps['error'];\n  totalCols?: number;\n  cols?: number;\n  textareaRef?: (...args: any[]) => any;\n} & TextareaHTMLAttributes<HTMLTextAreaElement>;\n\ntype TextareaState = {\n  id: string;\n};\n\nexport class Textarea extends Component<TextareaProps, TextareaState> {\n  static isFormElement = true;\n\n  constructor(props: Readonly<TextareaProps>) {\n    super(props);\n    this.state = { id: `form-element-${uuid()}` };\n  }\n\n  render() {\n    const id = this.props.id || this.state.id;\n    const { label, required, error, totalCols, cols, ...props } = this.props;\n    if (label || required || error || totalCols || cols) {\n      const formElemProps = { id, label, required, error, totalCols, cols };\n      return (\n        <FormElement {...formElemProps}>\n          <Textarea {...{ ...props, id }} />\n        </FormElement>\n      );\n    }\n    const { className, textareaRef, ...pprops } = props;\n    const taClassNames = classnames(className, 'slds-input');\n    return (\n      <textarea\n        id={id}\n        ref={textareaRef}\n        className={taClassNames}\n        {...pprops}\n      />\n    );\n  }\n}\n"],"file":"Textarea.js"}