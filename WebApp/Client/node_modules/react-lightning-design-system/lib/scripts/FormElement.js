"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormElement = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _classnames2 = _interopRequireDefault(require("classnames"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var FormElement = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(FormElement, _React$Component);

  var _super = _createSuper(FormElement);

  function FormElement() {
    (0, _classCallCheck2["default"])(this, FormElement);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(FormElement, [{
    key: "renderFormElement",
    value: function renderFormElement(props) {
      var className = props.className,
          error = props.error,
          totalCols = props.totalCols,
          _props$cols = props.cols,
          cols = _props$cols === void 0 ? 1 : _props$cols,
          formElementRef = props.formElementRef,
          children = props.children;
      var formElementClassNames = (0, _classnames2["default"])('slds-form-element', (0, _defineProperty2["default"])({
        'slds-has-error': error
      }, "slds-size_".concat(cols, "-of-").concat(totalCols), typeof totalCols === 'number'), className);
      return /*#__PURE__*/_react["default"].createElement("div", {
        ref: formElementRef,
        key: "form-element",
        className: formElementClassNames
      }, children);
    }
  }, {
    key: "renderLabel",
    value: function renderLabel() {
      var _this$props = this.props,
          id = _this$props.id,
          label = _this$props.label,
          required = _this$props.required;
      return label ? /*#__PURE__*/_react["default"].createElement("label", {
        key: "form-element-label",
        className: "slds-form-element__label",
        htmlFor: id
      }, label, required ? /*#__PURE__*/_react["default"].createElement("abbr", {
        className: "slds-required"
      }, "*") : undefined) : undefined;
    }
  }, {
    key: "renderControl",
    value: function renderControl(props) {
      var children = props.children,
          dropdown = props.dropdown,
          error = props.error;
      var readOnly = this.props.readOnly;
      var formElementControlClassNames = (0, _classnames2["default"])('slds-form-element__control', {
        'slds-has-divider_bottom': readOnly
      });
      return /*#__PURE__*/_react["default"].createElement("div", {
        key: "form-element-control",
        className: formElementControlClassNames
      }, children, dropdown, this.renderError(error));
    }
  }, {
    key: "renderError",
    value: function renderError(error) {
      var errorMessage = error ? typeof error === 'string' ? error : (0, _typeof2["default"])(error) === 'object' ? error.message : undefined : undefined;
      return errorMessage ? /*#__PURE__*/_react["default"].createElement("span", {
        key: "slds-form-error",
        className: "slds-form-element__help"
      }, errorMessage) : undefined;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          dropdown = _this$props2.dropdown,
          className = _this$props2.className,
          totalCols = _this$props2.totalCols,
          cols = _this$props2.cols,
          error = _this$props2.error,
          children = _this$props2.children,
          style = _this$props2.style,
          props = (0, _objectWithoutProperties2["default"])(_this$props2, ["dropdown", "className", "totalCols", "cols", "error", "children", "style"]);
      var labelElem = this.renderLabel();
      var controlElem = this.renderControl({
        children: children,
        dropdown: dropdown,
        error: error
      });
      var formElemChildren = [labelElem, controlElem];
      return this.renderFormElement(_objectSpread(_objectSpread({}, props), {}, {
        className: className,
        error: error,
        totalCols: totalCols,
        cols: cols,
        style: style,
        children: formElemChildren
      }));
    }
  }]);
  return FormElement;
}(_react["default"].Component);

exports.FormElement = FormElement;
(0, _defineProperty2["default"])(FormElement, "isFormElement", true);
//# sourceMappingURL=FormElement.js.map