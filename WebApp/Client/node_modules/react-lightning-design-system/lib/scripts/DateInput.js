"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateInput = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _moment = _interopRequireDefault(require("moment"));

var _AutoAlign = require("./AutoAlign");

var _Button = require("./Button");

var _FormElement = require("./FormElement");

var _Input = require("./Input");

var _Datepicker = require("./Datepicker");

var _util = require("./util");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 *
 */
var DatepickerDropdown = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(DatepickerDropdown, _Component);

  var _super = _createSuper(DatepickerDropdown);

  function DatepickerDropdown() {
    var _this;

    (0, _classCallCheck2["default"])(this, DatepickerDropdown);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "node", null);
    return _this;
  }

  (0, _createClass2["default"])(DatepickerDropdown, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          className = _this$props.className,
          alignment = _this$props.alignment,
          dateValue = _this$props.dateValue,
          minDate = _this$props.minDate,
          maxDate = _this$props.maxDate,
          extensionRenderer = _this$props.extensionRenderer,
          elementRef = _this$props.elementRef,
          onSelect = _this$props.onSelect,
          onBlur = _this$props.onBlur,
          onClose = _this$props.onClose;

      var _alignment = (0, _slicedToArray2["default"])(alignment, 2),
          vertAlign = _alignment[0],
          align = _alignment[1];

      var datepickerClassNames = (0, _classnames["default"])(className, 'slds-dropdown', align ? "slds-dropdown_".concat(align) : undefined, vertAlign ? "slds-dropdown_".concat(vertAlign) : undefined);

      var handleDOMRef = function handleDOMRef(node) {
        _this2.node = node;

        if (elementRef) {
          elementRef(node);
        }
      };

      return /*#__PURE__*/_react["default"].createElement(_Datepicker.Datepicker, {
        elementRef: handleDOMRef,
        className: datepickerClassNames,
        selectedDate: dateValue,
        autoFocus: true,
        minDate: minDate,
        maxDate: maxDate,
        extensionRenderer: extensionRenderer,
        onSelect: onSelect,
        onBlur: onBlur,
        onClose: onClose
      });
    }
  }]);
  return DatepickerDropdown;
}(_react.Component);

var DatepickerDropdownPortal = (0, _AutoAlign.autoAlign)({
  triggerSelector: '.slds-dropdown-trigger',
  alignmentStyle: 'menu'
})(DatepickerDropdown);

/**
 *
 */
var DateInput = /*#__PURE__*/function (_Component2) {
  (0, _inherits2["default"])(DateInput, _Component2);

  var _super2 = _createSuper(DateInput);

  function DateInput(props) {
    var _this3;

    (0, _classCallCheck2["default"])(this, DateInput);
    _this3 = _super2.call(this, props);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this3), "node", null);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this3), "datepicker", null);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this3), "input", null);
    _this3.state = {
      id: "form-element-".concat((0, _util.uuid)()),
      opened: typeof props.opened !== 'undefined' ? props.opened : props.defaultOpened || false,
      value: typeof props.value !== 'undefined' ? props.value : props.defaultValue || null,
      inputValue: null
    };
    _this3.onDateIconClick = _this3.onDateIconClick.bind((0, _assertThisInitialized2["default"])(_this3));
    _this3.onInputKeyDown = _this3.onInputKeyDown.bind((0, _assertThisInitialized2["default"])(_this3));
    _this3.onInputChange = _this3.onInputChange.bind((0, _assertThisInitialized2["default"])(_this3));
    _this3.onInputBlur = _this3.onInputBlur.bind((0, _assertThisInitialized2["default"])(_this3));
    _this3.onDatepickerSelect = _this3.onDatepickerSelect.bind((0, _assertThisInitialized2["default"])(_this3));
    _this3.onDatepickerBlur = _this3.onDatepickerBlur.bind((0, _assertThisInitialized2["default"])(_this3));
    _this3.onDatepickerClose = _this3.onDatepickerClose.bind((0, _assertThisInitialized2["default"])(_this3));
    (0, _util.registerStyle)('dateinput', [['.slds-has-error .slds-datepicker .slds-select', '{ border: 1px solid #d8dde6; box-shadow: none; }']]);
    return _this3;
  }

  (0, _createClass2["default"])(DateInput, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props.onValueChange && prevState.value !== this.state.value) {
        this.props.onValueChange(this.state.value, prevState.value);
      }
    }
  }, {
    key: "onDateIconClick",
    value: function onDateIconClick() {
      var _this4 = this;

      setTimeout(function () {
        _this4.showDatepicker();
      }, 10);
    }
  }, {
    key: "onInputKeyDown",
    value: function onInputKeyDown(e) {
      var _this5 = this;

      if (e.keyCode === 13) {
        // return key
        e.preventDefault();
        e.stopPropagation();

        if (e.currentTarget.value !== undefined) {
          this.setValueFromInput(e.currentTarget.value);
        }

        if (this.props.onComplete) {
          setTimeout(function () {
            if (_this5.props.onComplete) {
              _this5.props.onComplete();
            }
          }, 10);
        }
      } else if (e.keyCode === 40) {
        // down key
        this.showDatepicker();
        e.preventDefault();
        e.stopPropagation();
      }

      if (this.props.onKeyDown) {
        this.props.onKeyDown(e);
      }
    }
  }, {
    key: "onInputChange",
    value: function onInputChange(e) {
      var inputValue = e.target.value;
      this.setState({
        inputValue: inputValue
      });

      if (this.props.onChange) {
        this.props.onChange(e);
      }
    }
  }, {
    key: "onInputBlur",
    value: function onInputBlur(e) {
      var _this6 = this;

      this.setValueFromInput(e.target.value);
      setTimeout(function () {
        if (!_this6.isFocusedInComponent()) {
          if (_this6.props.onBlur) {
            _this6.props.onBlur();
          }

          if (_this6.props.onComplete) {
            _this6.props.onComplete();
          }
        }
      }, 10);
    }
  }, {
    key: "onDatepickerSelect",
    value: function onDatepickerSelect(dvalue) {
      var _this7 = this;

      var value = (0, _moment["default"])(dvalue).format(this.getValueFormat());
      this.setState({
        value: value,
        inputValue: null
      });
      setTimeout(function () {
        _this7.setState({
          opened: false
        });

        var inputEl = _this7.input;

        if (inputEl) {
          inputEl.focus();
          inputEl.select();
        }

        if (_this7.props.onComplete) {
          _this7.props.onComplete();
        }
      }, 200);
    }
  }, {
    key: "onDatepickerBlur",
    value: function onDatepickerBlur() {
      var _this8 = this;

      this.setState({
        opened: false
      });
      setTimeout(function () {
        if (!_this8.isFocusedInComponent()) {
          if (_this8.props.onBlur) {
            _this8.props.onBlur();
          }

          if (_this8.props.onComplete) {
            _this8.props.onComplete();
          }
        }
      }, 10);
    }
  }, {
    key: "onDatepickerClose",
    value: function onDatepickerClose() {
      this.setState({
        opened: false
      });
      var inputEl = this.input;

      if (inputEl) {
        inputEl.focus();
        inputEl.select();
      }
    }
  }, {
    key: "getValueFormat",
    value: function getValueFormat() {
      return this.props.includeTime ? 'YYYY-MM-DDTHH:mm:ss.SSSZ' : 'YYYY-MM-DD';
    }
  }, {
    key: "getInputValueFormat",
    value: function getInputValueFormat() {
      return this.props.dateFormat || (this.props.includeTime ? 'L HH:mm' : 'L');
    }
  }, {
    key: "setValueFromInput",
    value: function setValueFromInput(inputValue) {
      var value = this.state.value;

      if (!inputValue) {
        value = '';
      } else {
        var mvalue = (0, _moment["default"])(inputValue, this.getInputValueFormat());

        if (mvalue.isValid()) {
          value = mvalue.format(this.getValueFormat());
        } else {
          value = '';
        }
      }

      this.setState({
        value: value,
        inputValue: null
      });
    }
  }, {
    key: "isFocusedInComponent",
    value: function isFocusedInComponent() {
      var targetEl = document.activeElement;
      return (0, _util.isElInChildren)(this.node, targetEl) || (0, _util.isElInChildren)(this.datepicker, targetEl);
    }
  }, {
    key: "showDatepicker",
    value: function showDatepicker() {
      var value = this.state.value;

      if (this.state.inputValue != null) {
        var mvalue = (0, _moment["default"])(this.state.inputValue, this.getInputValueFormat());

        if (mvalue.isValid()) {
          value = mvalue.format(this.getValueFormat());
        } else {
          // eslint-disable-next-line prefer-destructuring
          value = this.state.value;
        }
      }

      this.setState({
        opened: true,
        value: value
      });
    }
  }, {
    key: "renderInput",
    value: function renderInput(_ref) {
      var _this9 = this;

      var inputValue = _ref.inputValue,
          props = (0, _objectWithoutProperties2["default"])(_ref, ["inputValue"]);
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "slds-input-has-icon slds-input-has-icon_right"
      }, /*#__PURE__*/_react["default"].createElement(_Input.Input, (0, _extends2["default"])({
        inputRef: function inputRef(node) {
          return _this9.input = node;
        }
      }, props, {
        value: inputValue,
        onKeyDown: this.onInputKeyDown,
        onChange: this.onInputChange,
        onBlur: this.onInputBlur
      })), /*#__PURE__*/_react["default"].createElement(_Button.Button, {
        type: "icon",
        icon: "event",
        disabled: props.disabled,
        className: "slds-input__icon slds-input__icon_right",
        tabIndex: -1,
        onClick: props.disabled ? undefined : this.onDateIconClick,
        onBlur: this.onInputBlur
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this10 = this;

      var id = this.props.id || this.state.id;
      var _this$props2 = this.props,
          className = _this$props2.className,
          totalCols = _this$props2.totalCols,
          cols = _this$props2.cols,
          label = _this$props2.label,
          required = _this$props2.required,
          error = _this$props2.error,
          value = _this$props2.value,
          menuAlign = _this$props2.menuAlign,
          minDate = _this$props2.minDate,
          maxDate = _this$props2.maxDate,
          opened = _this$props2.opened,
          extensionRenderer = _this$props2.extensionRenderer,
          dateFormat = _this$props2.dateFormat,
          defaultValue = _this$props2.defaultValue,
          defaultOpened = _this$props2.defaultOpened,
          includeTime = _this$props2.includeTime,
          onComplete = _this$props2.onComplete,
          onValueChange = _this$props2.onValueChange,
          props = (0, _objectWithoutProperties2["default"])(_this$props2, ["className", "totalCols", "cols", "label", "required", "error", "value", "menuAlign", "minDate", "maxDate", "opened", "extensionRenderer", "dateFormat", "defaultValue", "defaultOpened", "includeTime", "onComplete", "onValueChange"]);
      var dateValue = typeof value !== 'undefined' ? value : this.state.value;
      var mvalue = (0, _moment["default"])(dateValue || undefined, this.getValueFormat());
      var inputValue = this.state.inputValue != null ? this.state.inputValue : dateValue != null && mvalue.isValid() ? mvalue.format(this.getInputValueFormat()) : undefined;
      var isOpened = typeof opened !== 'undefined' ? opened : this.state.opened;
      var formElemProps = {
        id: id,
        totalCols: totalCols,
        cols: cols,
        label: label,
        required: required,
        error: error
      };
      return /*#__PURE__*/_react["default"].createElement(_FormElement.FormElement, (0, _extends2["default"])({
        formElementRef: function formElementRef(node) {
          return _this10.node = node;
        }
      }, formElemProps), /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])(className, 'slds-dropdown-trigger')
      }, this.renderInput(_objectSpread({
        id: id,
        inputValue: inputValue
      }, props)), isOpened ? /*#__PURE__*/_react["default"].createElement(DatepickerDropdownPortal, {
        portalClassName: className,
        elementRef: function elementRef(node) {
          return _this10.datepicker = node;
        },
        dateValue: mvalue.isValid() ? mvalue.format('YYYY-MM-DD') : undefined,
        minDate: minDate,
        maxDate: maxDate,
        align: menuAlign,
        extensionRenderer: extensionRenderer,
        onBlur: this.onDatepickerBlur,
        onSelect: this.onDatepickerSelect,
        onClose: this.onDatepickerClose
      }) : undefined));
    }
  }]);
  return DateInput;
}(_react.Component);

exports.DateInput = DateInput;
(0, _defineProperty2["default"])(DateInput, "isFormElement", true);
//# sourceMappingURL=DateInput.js.map