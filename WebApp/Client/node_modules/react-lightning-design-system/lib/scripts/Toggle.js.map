{"version":3,"sources":["../../src/scripts/Toggle.tsx"],"names":["Toggle","className","label","props","toggleClassNames","required","error","totalCols","cols","formElemProps","node","renderToggle","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;IAWaA,M;;;;;;;;;;;;;;;6FACmB,I;;;;;;uCAE4B;AAAA,UAA3CC,SAA2C,QAA3CA,SAA2C;AAAA,UAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,UAAtBC,KAAsB;AACxD,UAAMC,gBAAgB,GAAG,4BACvBH,SADuB,EAEvB,gCAFuB,CAAzB;AAIA,0BACE;AAAO,QAAA,SAAS,EAAEG;AAAlB,sBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACGF,KADH,CADF,eAIE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,4BAAiB;AAHnB,SAIMC,KAJN,EAJF,eAUE;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAA+C,qBAAU;AAAzD,sBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,QADF,eAEE;AAAM,QAAA,SAAS,EAAC;AAAhB,mBAFF,eAGE;AAAM,QAAA,SAAS,EAAC;AAAhB,oBAHF,CAVF,CADF;AAkBD;;;6BAEQ;AAAA;;AAAA,wBACgD,KAAKA,KADrD;AAAA,UACCE,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAAA,UACkBC,SADlB,eACkBA,SADlB;AAAA,UAC6BC,IAD7B,eAC6BA,IAD7B;AAAA,UACsCL,KADtC;AAEP,UAAMM,aAAa,GAAG;AAAEJ,QAAAA,QAAQ,EAARA,QAAF;AAAYC,QAAAA,KAAK,EAALA,KAAZ;AAAmBC,QAAAA,SAAS,EAATA,SAAnB;AAA8BC,QAAAA,IAAI,EAAJA;AAA9B,OAAtB;AACA,0BACE,gCAAC,wBAAD;AACE,QAAA,cAAc,EAAE,wBAACE,IAAD;AAAA,iBAAW,MAAI,CAACA,IAAL,GAAYA,IAAvB;AAAA;AADlB,SAEMD,aAFN,GAIG,KAAKE,YAAL,CAAkBR,KAAlB,CAJH,CADF;AAQD;;;EAvCyBS,gB","sourcesContent":["import React, { Component, InputHTMLAttributes } from 'react';\nimport classnames from 'classnames';\nimport { FormElement, FormElementProps } from './FormElement';\n\nexport type ToggleProps = {\n  label?: string;\n  required?: boolean;\n  error?: FormElementProps['error'];\n  totalCols?: number;\n  cols?: number;\n  name?: string;\n} & InputHTMLAttributes<HTMLInputElement>;\n\nexport class Toggle extends Component<ToggleProps> {\n  node: HTMLDivElement | null = null;\n\n  renderToggle({ className, label, ...props }: ToggleProps) {\n    const toggleClassNames = classnames(\n      className,\n      'slds-checkbox_toggle slds-grid'\n    );\n    return (\n      <label className={toggleClassNames}>\n        <span className='slds-form-element__label slds-m-bottom_none'>\n          {label}\n        </span>\n        <input\n          name='checkbox'\n          type='checkbox'\n          aria-describedby='toggle-desc'\n          {...props}\n        />\n        <span className='slds-checkbox_faux_container' aria-live='assertive'>\n          <span className='slds-checkbox_faux' />\n          <span className='slds-checkbox_on'>Enabled</span>\n          <span className='slds-checkbox_off'>Disabled</span>\n        </span>\n      </label>\n    );\n  }\n\n  render() {\n    const { required, error, totalCols, cols, ...props } = this.props;\n    const formElemProps = { required, error, totalCols, cols };\n    return (\n      <FormElement\n        formElementRef={(node) => (this.node = node)}\n        {...formElemProps}\n      >\n        {this.renderToggle(props)}\n      </FormElement>\n    );\n  }\n}\n"],"file":"Toggle.js"}