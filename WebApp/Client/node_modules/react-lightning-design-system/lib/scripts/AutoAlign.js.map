{"version":3,"sources":["../../src/scripts/AutoAlign.tsx"],"names":["delay","ms","Promise","resolve","setTimeout","getViewportRect","window","innerHeight","height","Infinity","innerWidth","width","top","left","calcAlignmentRect","target","rect","alignment","firstAlign","secondAlign","hasViewportIntersection","viewportWidth","viewportHeight","isEqualRect","aRect","bRect","getCenterPoint","x","y","getPreferAlignment","v","h","rx","ry","vx","vy","throttle","func","last","now","Date","ignoreFirstCall","called","removeAbsoluteAlign","map","a","replace","getPossibleAlignments","alignmentStyle","align","alignments","filter","test","EMPTY_RECT","autoAlign","options","triggerSelector","Cmp","props","pid","recalcAlignment","node","triggerEl","matches","matchesSelector","msMatchesSelector","call","parentElement","e","oldTriggerNodeRect","state","triggerNodeRect","getBoundingClientRect","updateAlignment","oldAlignment","rootNodeRect","content","contentRectWidth","contentRectHeight","possibleAlignments","length","setState","requestRecalcAlignment","additionalPortalClassName","portalClassName","portalStyle","additionalPortalStyle","preventPortalize","children","pprops","context","position","right","offsetTop","offsetLeft","cmp","process","env","NODE_ENV","React","Component","PropTypes","string","object"],"mappings":"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","sourcesContent":["import React, { ComponentType } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport RelativePortal from 'react-relative-portal';\nimport { ComponentSettingsContext } from './ComponentSettings';\n\nfunction delay(ms: number) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n\nfunction getViewportRect(): Rect {\n  const { innerHeight: height = Infinity, innerWidth: width = Infinity } =\n    window || {};\n  return { top: 0, left: 0, width, height };\n}\n\ntype Offset = {\n  top: number;\n  left: number;\n};\n\ntype Rect = Offset & {\n  width: number;\n  height: number;\n};\n\ntype VertAlign = 'top' | 'bottom' | 'top-absolute' | 'bottom-absolute';\ntype HorizAlign = 'left' | 'right' | 'left-absolute' | 'right-absolute';\ntype Align = VertAlign | HorizAlign;\n\nexport type RectangleAlignment = Readonly<[Align] | [Align, Align]>;\n\nfunction calcAlignmentRect(\n  target: Rect,\n  rect: { width: number; height: number },\n  alignment: RectangleAlignment\n) {\n  const [firstAlign, secondAlign] = alignment;\n  return {\n    ...rect,\n    top:\n      firstAlign === 'top-absolute' || secondAlign === 'top-absolute'\n        ? 0\n        : firstAlign === 'bottom-absolute' || secondAlign === 'bottom-absolute'\n        ? getViewportRect().height - rect.height\n        : firstAlign === 'top'\n        ? target.top + target.height\n        : firstAlign === 'bottom'\n        ? target.top - rect.height\n        : secondAlign === 'top'\n        ? target.top\n        : secondAlign === 'bottom'\n        ? target.top + target.height - rect.height\n        : // valign middle\n          target.top + (target.height - rect.height) * 0.5,\n    left:\n      firstAlign === 'left-absolute' || secondAlign === 'left-absolute'\n        ? 0\n        : firstAlign === 'right-absolute' || secondAlign === 'right-absolute'\n        ? getViewportRect().width - rect.width\n        : firstAlign === 'left'\n        ? target.left + target.width\n        : firstAlign === 'right'\n        ? target.left - rect.width\n        : secondAlign === 'left'\n        ? target.left\n        : secondAlign === 'right'\n        ? target.left + target.width - rect.width\n        : // halign center\n          target.left + (target.width - rect.width) * 0.5,\n  };\n}\n\nfunction hasViewportIntersection({ top, left, width, height }: Rect) {\n  const { width: viewportWidth, height: viewportHeight } = getViewportRect();\n  return (\n    top < 0 ||\n    top + height > viewportHeight ||\n    left < 0 ||\n    left + width > viewportWidth\n  );\n}\n\nfunction isEqualRect(\n  aRect: Rect | null | undefined,\n  bRect: Rect | null | undefined\n) {\n  if (aRect === bRect) {\n    return true;\n  }\n  if (!aRect || !bRect) {\n    return false;\n  }\n  return (\n    aRect.top === bRect.top &&\n    aRect.left === bRect.left &&\n    aRect.width === bRect.width &&\n    aRect.height === bRect.height\n  );\n}\n\nfunction getCenterPoint(rect: Rect) {\n  return {\n    x: rect.left + 0.5 * rect.width,\n    y: rect.top + 0.5 * rect.height,\n  };\n}\n\nfunction getPreferAlignment(rect?: Rect) {\n  if (!rect) {\n    return { v: 'top', h: 'left' };\n  }\n  const { x: rx, y: ry } = getCenterPoint(rect);\n  const { x: vx, y: vy } = getCenterPoint(getViewportRect());\n  return {\n    h: rx < vx ? 'left' : 'right',\n    v: ry < vy ? 'top' : 'bottom',\n  };\n}\n\nfunction throttle(func: Function, ms: number) {\n  let last = 0;\n  return (...args: any) => {\n    const now = Date.now();\n    if (last + ms < now) {\n      func(...args);\n      last = now;\n    }\n  };\n}\n\nfunction ignoreFirstCall(func: Function) {\n  let called = false;\n  return (...args: any) => {\n    if (called) {\n      func(...args);\n    }\n    called = true;\n  };\n}\n\nfunction removeAbsoluteAlign(\n  alignment: RectangleAlignment\n): RectangleAlignment {\n  return (alignment.map(\n    (a) => a.replace(/-absolute$/, '') as Align\n  ) as unknown) as RectangleAlignment;\n}\n\nexport type AutoAlignOptions = {\n  triggerSelector: string;\n  alignmentStyle: 'menu' | 'popover';\n};\n\nexport type AutoAlignProps = {\n  portalClassName?: string;\n  portalStyle?: object;\n  size?: 'small' | 'medium' | 'large';\n  preventPortalize?: boolean;\n  align?: Align;\n} & Partial<InjectedProps>;\n\nexport type InjectedProps = {\n  alignment: RectangleAlignment;\n};\n\nexport type AutoAlignState = {\n  alignment: RectangleAlignment;\n  rootNodeRect?: Rect;\n  triggerNodeRect?: Rect;\n};\n\nfunction getPossibleAlignments(\n  alignmentStyle: AutoAlignOptions['alignmentStyle'],\n  align?: Align,\n  target?: Rect\n): RectangleAlignment[] {\n  const { h, v } = getPreferAlignment(target);\n  const alignments: RectangleAlignment[] = [\n    ['top', 'left'],\n    ['top', 'right'],\n    ['top'],\n    ['bottom', 'left'],\n    ['bottom', 'right'],\n    ['bottom'],\n    ['left', 'top'],\n    ['left', 'bottom'],\n    ['left'],\n    ['right', 'top'],\n    ['right', 'bottom'],\n    ['right'],\n    ['top', `${h}-absolute` as Align],\n    ['bottom', `${h}-absolute` as Align],\n    ['left', `${v}-absolute` as Align],\n    ['right', `${v}-absolute` as Align],\n    [`${v}-absolute` as Align, 'left'],\n    [`${v}-absolute` as Align, 'right'],\n    [`${h}-absolute` as Align, 'top'],\n    [`${h}-absolute` as Align, 'bottom'],\n    [`${v}-absolute` as Align],\n    [`${h}-absolute` as Align],\n    [`${v}-absolute` as Align, `${h}-absolute` as Align],\n  ];\n  return alignments\n    .filter(\n      ([firstAlign, secondAlign]) =>\n        !align || firstAlign === align || secondAlign === align\n    )\n    .filter(([firstAlign, secondAlign]) =>\n      alignmentStyle === 'menu'\n        ? secondAlign && /^(top|bottom)/.test(firstAlign)\n        : true\n    );\n}\n\nconst EMPTY_RECT = { top: 0, left: 0, width: 0, height: 0 };\n\n/**\n *\n */\nexport function autoAlign(options: AutoAlignOptions) {\n  const { triggerSelector, alignmentStyle } = options;\n\n  return <TOriginalProps extends {}>(\n    Cmp: ComponentType<TOriginalProps & InjectedProps>\n  ) => {\n    type ResultProps = TOriginalProps & AutoAlignProps;\n\n    return class extends React.Component<ResultProps, AutoAlignState> {\n      pid: number | null = null;\n\n      /* eslint-disable react/sort-comp */\n      node: HTMLElement | null = null;\n\n      content: any;\n      /* eslint-enable react/sort-comp */\n\n      context!: Pick<\n        ComponentSettingsContext,\n        'portalClassName' | 'portalStyle'\n      >;\n\n      static contextTypes = {\n        portalClassName: PropTypes.string,\n        portalStyle: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n      };\n\n      constructor(props: ResultProps) {\n        super(props);\n        this.state = {\n          alignment: getPossibleAlignments(alignmentStyle, props.align)[0],\n        };\n      }\n\n      componentDidMount() {\n        this.requestRecalcAlignment();\n      }\n\n      componentWillUnmount() {\n        this.pid = null;\n        this.node = null;\n        this.content = null;\n      }\n\n      // eslint-disable-next-line react/sort-comp\n      requestRecalcAlignment = throttle(async () => {\n        const pid = (this.pid || 0) + 1;\n        this.pid = pid;\n        for (const ms of [0, 300, 400, 300, 200]) {\n          await delay(ms);\n          if (this.pid !== pid) {\n            return;\n          }\n          this.recalcAlignment();\n        }\n        this.pid = 0;\n      }, 100);\n\n      recalcAlignment = () => {\n        if (this.node) {\n          let triggerEl: HTMLElement | null = this.node;\n          const matches =\n            triggerEl.matches ||\n            (triggerEl as any).matchesSelector ||\n            (triggerEl as any).msMatchesSelector;\n          try {\n            while (triggerEl) {\n              if (matches.call(triggerEl, triggerSelector)) {\n                break;\n              }\n              triggerEl = triggerEl.parentElement;\n            }\n          } catch (e) {\n            triggerEl = null;\n          }\n          // eslint-disable-next-line react/destructuring-assignment\n          const oldTriggerNodeRect = this.state.triggerNodeRect;\n          if (triggerEl) {\n            const {\n              top,\n              left,\n              width,\n              height,\n            } = triggerEl.getBoundingClientRect();\n            if (\n              !isEqualRect(oldTriggerNodeRect, { top, left, width, height })\n            ) {\n              this.updateAlignment({ top, left, width, height });\n            } else {\n              this.updateAlignment(oldTriggerNodeRect);\n            }\n          } else {\n            this.updateAlignment(oldTriggerNodeRect);\n          }\n        }\n      };\n\n      updateAlignment = (triggerNodeRect: Rect = EMPTY_RECT) => {\n        const {\n          triggerNodeRect: oldTriggerNodeRect,\n          alignment: oldAlignment,\n        } = this.state;\n        const rootNodeRect = this.node\n          ? this.node.getBoundingClientRect()\n          : EMPTY_RECT;\n        const { width: contentRectWidth, height: contentRectHeight } =\n          this.content && this.content.node\n            ? this.content.node.getBoundingClientRect()\n            : EMPTY_RECT;\n        let alignment = null;\n        const possibleAlignments = getPossibleAlignments(\n          alignmentStyle,\n          this.props.align,\n          triggerNodeRect\n        );\n        for (const align of possibleAlignments) {\n          const aRect = calcAlignmentRect(\n            triggerNodeRect,\n            { width: contentRectWidth, height: contentRectHeight },\n            align\n          );\n          if (!hasViewportIntersection(aRect)) {\n            alignment = align;\n            break;\n          }\n        }\n        if (!alignment) {\n          alignment = possibleAlignments[possibleAlignments.length - 1];\n        }\n        if (\n          alignment[0] !== oldAlignment[0] ||\n          alignment[1] !== oldAlignment[1]\n        ) {\n          this.setState({ alignment, triggerNodeRect, rootNodeRect });\n        } else if (\n          !oldTriggerNodeRect ||\n          triggerNodeRect.width !== oldTriggerNodeRect.width ||\n          triggerNodeRect.height !== oldTriggerNodeRect.height ||\n          /absolute$/.test(oldAlignment[0]) ||\n          /absolute$/.test(oldAlignment[1] || '')\n        ) {\n          this.setState({ triggerNodeRect, rootNodeRect });\n        }\n      };\n\n      render() {\n        const {\n          triggerNodeRect = EMPTY_RECT,\n          rootNodeRect = EMPTY_RECT,\n        } = this.state;\n        const {\n          // eslint-disable-next-line react/destructuring-assignment\n          alignment = this.state.alignment,\n          // eslint-disable-next-line react/destructuring-assignment\n          portalClassName: additionalPortalClassName,\n          portalStyle: additionalPortalStyle = {},\n          preventPortalize,\n          children,\n          ...pprops\n        } = this.props;\n        const {\n          portalClassName = 'slds-scope',\n          portalStyle = { position: 'absolute', top: 0, left: 0, right: 0 },\n        } = this.context;\n        // eslint-disable-next-line prefer-const\n        let { top, left } = calcAlignmentRect(\n          triggerNodeRect,\n          rootNodeRect,\n          alignment\n        );\n        if (\n          (alignment[0] === 'top' || alignment[0] === 'bottom') &&\n          !alignment[1]\n        ) {\n          left = triggerNodeRect.left + triggerNodeRect.width * 0.5;\n        }\n        const offsetTop = top - rootNodeRect.top;\n        const offsetLeft = left - rootNodeRect.left;\n        const content = (\n          <Cmp\n            alignment={removeAbsoluteAlign(alignment)}\n            ref={(cmp: any) => (this.content = cmp)}\n            {...pprops as TOriginalProps}\n          >\n            {children}\n          </Cmp>\n        );\n        return preventPortalize || process.env.NODE_ENV === 'test' ? (\n          content\n        ) : (\n          <div ref={(node) => (this.node = node)}>\n            <RelativePortal\n              fullWidth\n              left={offsetLeft}\n              right={-offsetLeft}\n              top={offsetTop}\n              onScroll={ignoreFirstCall(this.requestRecalcAlignment)}\n              component='div'\n              className={classnames(portalClassName, additionalPortalClassName)}\n              style={{ ...portalStyle, ...additionalPortalStyle }}\n            >\n              {this.state.triggerNodeRect ? (\n                content\n              ) : (\n                <div className='slds-hidden'>{content}</div>\n              )}\n            </RelativePortal>\n          </div>\n        );\n      }\n    };\n  };\n}\n"],"file":"AutoAlign.js"}