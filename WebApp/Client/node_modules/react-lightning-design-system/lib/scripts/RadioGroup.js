"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RadioGroup = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var RadioGroup = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(RadioGroup, _React$Component);

  var _super = _createSuper(RadioGroup);

  function RadioGroup() {
    var _this;

    (0, _classCallCheck2["default"])(this, RadioGroup);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderControl", function (radio) {
      return _this.props.name ? /*#__PURE__*/_react["default"].cloneElement(radio, {
        name: _this.props.name,
        onChange: _this.onControlChange.bind((0, _assertThisInitialized2["default"])(_this), radio.props.value)
      }) : radio;
    });
    return _this;
  }

  (0, _createClass2["default"])(RadioGroup, [{
    key: "onControlChange",
    value: function onControlChange(value) {
      if (this.props.onValueChange) {
        this.props.onValueChange(value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          label = _this$props.label,
          required = _this$props.required,
          error = _this$props.error,
          totalCols = _this$props.totalCols,
          cols = _this$props.cols,
          style = _this$props.style,
          children = _this$props.children,
          onChange = _this$props.onChange,
          props = (0, _objectWithoutProperties2["default"])(_this$props, ["className", "label", "required", "error", "totalCols", "cols", "style", "children", "onChange"]);
      var grpClassNames = (0, _classnames["default"])(className, 'slds-form-element', {
        'slds-has-error': error,
        'slds-is-required': required
      }, typeof totalCols === 'number' ? "slds-size_".concat(cols || 1, "-of-").concat(totalCols) : null);
      var grpStyles = typeof totalCols === 'number' ? _objectSpread({
        display: 'inline-block'
      }, style) : style;
      var errorMessage = error ? typeof error === 'string' ? error : (0, _typeof2["default"])(error) === 'object' ? error.message : undefined : undefined;
      return /*#__PURE__*/_react["default"].createElement("fieldset", (0, _extends2["default"])({
        className: grpClassNames,
        style: grpStyles
      }, props), /*#__PURE__*/_react["default"].createElement("legend", {
        className: "slds-form-element__label"
      }, label, required ? /*#__PURE__*/_react["default"].createElement("abbr", {
        className: "slds-required"
      }, "*") : undefined), /*#__PURE__*/_react["default"].createElement("div", {
        className: "slds-form-element__control"
      }, _react["default"].Children.map(children, this.renderControl), errorMessage ? /*#__PURE__*/_react["default"].createElement("div", {
        className: "slds-form-element__help"
      }, errorMessage) : undefined));
    }
  }]);
  return RadioGroup;
}(_react["default"].Component);

exports.RadioGroup = RadioGroup;
(0, _defineProperty2["default"])(RadioGroup, "isFormElement", true);
//# sourceMappingURL=RadioGroup.js.map