{"version":3,"sources":["../../src/scripts/Popover.tsx"],"names":["PopoverHeader","props","children","PopoverBody","PopoverInner","alignment","hidden","theme","tooltip","style","bodyStyle","nubbinPosition","join","firstAlign","secondAlign","popoverClassNames","undefined","rootStyle","position","width","transform","node","React","Component","map","Cmp","fn","p1","Popover","triggerSelector","alignmentStyle","split","displayName"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, CSSProperties, ComponentType } from 'react';\nimport classnames from 'classnames';\nimport { autoAlign, InjectedProps, RectangleAlignment } from './AutoAlign';\n\nexport const PopoverHeader: React.FC = (props) => (\n  <div className='slds-popover__header'>{props.children}</div>\n);\n\nexport type PopoverBodyProps = React.HTMLAttributes<HTMLDivElement>;\n\nexport const PopoverBody: React.FC<PopoverBodyProps> = (props) => (\n  <div className='slds-popover__body' {...props}>\n    {props.children}\n  </div>\n);\n\nexport type PopoverPosition =\n  | 'top'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'left'\n  | 'left-top'\n  | 'left-bottom'\n  | 'right'\n  | 'right-top'\n  | 'right-bottom';\n\nexport type PopoverTheme = 'info' | 'success' | 'warning' | 'error';\n\nexport type PopoverProps = {\n  position?: PopoverPosition;\n  hidden?: boolean;\n  theme?: PopoverTheme;\n  tooltip?: boolean;\n  bodyStyle?: CSSProperties;\n} & HTMLAttributes<HTMLDivElement>;\n\nclass PopoverInner extends React.Component<PopoverProps & InjectedProps> {\n  node: HTMLDivElement | null = null;\n\n  render() {\n    const {\n      children,\n      alignment,\n      hidden,\n      theme,\n      tooltip,\n      style,\n      bodyStyle,\n      ...props\n    } = this.props;\n    const nubbinPosition = alignment.join('-');\n    const [firstAlign, secondAlign] = alignment;\n    const popoverClassNames = classnames(\n      'slds-popover',\n      {\n        'slds-hide': hidden,\n        'slds-popover_tooltip': tooltip,\n      },\n      `slds-nubbin_${nubbinPosition}`,\n      `slds-m-${firstAlign}_small`,\n      theme ? `slds-theme_${theme}` : undefined\n    );\n    const rootStyle: typeof style = {\n      ...style,\n      position: 'absolute',\n      [firstAlign]: 0,\n      ...(secondAlign ? { [secondAlign]: 0 } : {}),\n      ...(tooltip ? { width: 'max-content' } : {}),\n      transform:\n        secondAlign === undefined\n          ? firstAlign === 'top' || firstAlign === 'bottom'\n            ? 'translateX(-50%)'\n            : firstAlign === 'left' || firstAlign === 'right'\n            ? 'translateY(-50%)'\n            : undefined\n          : undefined,\n    };\n    return (\n      <div\n        ref={(node: HTMLDivElement | null) => (this.node = node)}\n        className={popoverClassNames}\n        role={tooltip ? 'tooltip' : 'dialog'}\n        style={rootStyle}\n        {...props}\n      >\n        <PopoverBody style={bodyStyle}>{children}</PopoverBody>\n      </div>\n    );\n  }\n}\n\n/**\n *\n */\nfunction map<P1 extends {}, P2 extends {}>(\n  Cmp: ComponentType<P2>,\n  fn: (p1: P1) => P2\n): ComponentType<P1> {\n  return (p1: P1) => <Cmp {...fn(p1)} />;\n}\n\n/**\n *\n */\nexport const Popover = map(\n  autoAlign({\n    triggerSelector: '.slds-dropdown-trigger',\n    alignmentStyle: 'popover',\n  })(PopoverInner),\n  ({ position, ...props }: PopoverProps) => {\n    const alignment = position\n      ? ((position.split('-') as unknown) as RectangleAlignment)\n      : undefined;\n    return { alignment, ...props };\n  }\n);\n\nPopover.displayName = 'Popover';\n"],"file":"Popover.js"}