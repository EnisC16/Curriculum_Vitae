import { Component, InputHTMLAttributes, KeyboardEvent, ChangeEvent } from 'react';
import { FormElementProps } from './FormElement';
export declare type InputProps = {
    label?: string;
    required?: boolean;
    error?: FormElementProps['error'];
    totalCols?: number;
    cols?: number;
    value?: string;
    defaultValue?: string;
    placeholder?: string;
    bare?: boolean;
    symbolPattern?: string;
    readOnly?: boolean;
    htmlReadOnly?: boolean;
    iconLeft?: string | JSX.Element;
    iconRight?: string | JSX.Element;
    addonLeft?: string;
    addonRight?: string;
    onValueChange?: (value: string) => void;
    inputRef?: (node: HTMLInputElement) => void;
} & Omit<InputHTMLAttributes<HTMLInputElement>, 'value' | 'defaultValue'>;
export declare class Input extends Component<InputProps> {
    static isFormElement: boolean;
    constructor(props: Readonly<InputProps>);
    onChange: (e: ChangeEvent<HTMLInputElement>) => void;
    onKeyDown: (e: KeyboardEvent<HTMLInputElement>) => void;
    registerIconStyle(): void;
    renderAddon(content: string): JSX.Element;
    renderIcon(icon: any, align: 'left' | 'right'): JSX.Element;
    renderInput(props: InputProps): JSX.Element;
    render(): JSX.Element;
}
