{"version":3,"sources":["../../src/scripts/DropdownButton.tsx"],"names":["DropdownButton","props","setTimeout","isFocusedInComponent","setState","opened","onBlur","e","keyCode","preventDefault","stopPropagation","state","onClick","focusToTargetItemEl","hoverPopup","prevState","eventKey","triggerElem","trigger","focus","onMenuSelect","targetEl","document","activeElement","node","dropdown","dropdownEl","firstItemEl","querySelector","grouped","isFirstInGroup","isLastInGroup","pprops","onMenuItemClick","button","onTriggerClick","onKeyDown","noneStyle","display","className","menuAlign","menuSize","nubbinTop","menuHeader","type","label","children","style","menuStyle","icon","dropdownClassNames","iconMore","onMenuClose","Object","assign","transition","renderButton","undefined","Component"],"mappings":"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","sourcesContent":["import React, {\n  Component,\n  CSSProperties,\n  MouseEvent,\n  KeyboardEvent,\n  SyntheticEvent,\n} from 'react';\nimport classnames from 'classnames';\nimport { Button, ButtonProps } from './Button';\nimport { DropdownMenu } from './DropdownMenu';\nimport { registerStyle, isElInChildren } from './util';\n\nexport type DropdownMenuAlign = 'left' | 'right';\nexport type DropdownMenuSize = 'small' | 'medium' | 'large';\n\nexport type Key = string | number;\n\nexport type DropdownButtonProps<EventKey extends Key> = {\n  className?: string;\n  label?: React.ReactNode;\n  menuAlign?: DropdownMenuAlign;\n  menuSize?: DropdownMenuSize;\n  menuHeader?: string;\n  nubbinTop?: boolean;\n  hoverPopup?: boolean;\n  grouped?: boolean;\n  isFirstInGroup?: boolean;\n  isLastInGroup?: boolean;\n  menuStyle?: CSSProperties;\n  onClick?: (e: SyntheticEvent<HTMLButtonElement>) => void;\n  onBlur?: () => void;\n  onMenuSelect?: (eventKey: EventKey) => void;\n} & Omit<ButtonProps, 'onClick' | 'onBlur'>;\n\ntype DropdownButtonState = {\n  opened: boolean;\n};\n\nexport class DropdownButton<EventKey extends Key> extends Component<\n  DropdownButtonProps<EventKey>,\n  DropdownButtonState\n> {\n  node: HTMLDivElement | null = null;\n\n  trigger: HTMLButtonElement | null = null;\n\n  dropdown: HTMLDivElement | null = null;\n\n  constructor(props: Readonly<DropdownButtonProps<EventKey>>) {\n    super(props);\n    this.state = { opened: false };\n    registerStyle('no-hover-popup', [\n      [\n        '.slds-dropdown-trigger:hover .slds-dropdown_menu.react-slds-no-hover-popup',\n        '{ visibility: hidden; opacity: 0; }',\n      ],\n      [\n        '.slds-dropdown-trigger.react-slds-dropdown-opened .slds-dropdown_menu',\n        '{ visibility: visible !important; opacity: 1 !important; }',\n      ],\n    ]);\n  }\n\n  onBlur = () => {\n    setTimeout(() => {\n      if (!this.isFocusedInComponent()) {\n        this.setState({ opened: false });\n        if (this.props.onBlur) {\n          this.props.onBlur();\n        }\n      }\n    }, 10);\n  };\n\n  onKeyDown = (e: KeyboardEvent<HTMLButtonElement>) => {\n    if (e.keyCode === 40) {\n      // down\n      e.preventDefault();\n      e.stopPropagation();\n      if (!this.state.opened) {\n        this.setState({ opened: true });\n        if (this.props.onClick) {\n          this.props.onClick(e);\n        }\n        setTimeout(() => {\n          this.focusToTargetItemEl();\n        }, 20);\n      } else {\n        this.focusToTargetItemEl();\n      }\n    } else if (e.keyCode === 27) {\n      // ESC\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({ opened: false });\n    }\n  };\n\n  onTriggerClick = (e: MouseEvent<HTMLButtonElement>) => {\n    if (!this.props.hoverPopup) {\n      this.setState((prevState) => ({ opened: !prevState.opened }));\n    }\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  onMenuSelect = (eventKey: EventKey) => {\n    if (!this.props.hoverPopup) {\n      setTimeout(() => {\n        const triggerElem = this.trigger;\n        if (triggerElem) triggerElem.focus();\n        this.setState({ opened: false });\n      }, 10);\n    }\n    if (this.props.onMenuSelect) {\n      this.props.onMenuSelect(eventKey);\n    }\n  };\n\n  onMenuClose = () => {\n    if (this.trigger) {\n      this.trigger.focus();\n    }\n    this.setState({ opened: false });\n  };\n\n  isFocusedInComponent() {\n    const targetEl = document.activeElement;\n    return (\n      isElInChildren(this.node, targetEl) ||\n      isElInChildren(this.dropdown, targetEl)\n    );\n  }\n\n  focusToTargetItemEl() {\n    const dropdownEl = this.dropdown;\n    if (!dropdownEl) {\n      return;\n    }\n    const firstItemEl: HTMLAnchorElement | null =\n      dropdownEl.querySelector(\n        '.slds-is-selected > .react-slds-menuitem[tabIndex]'\n      ) || dropdownEl.querySelector('.react-slds-menuitem[tabIndex]');\n    if (firstItemEl) {\n      firstItemEl.focus();\n    }\n  }\n\n  renderButton({ grouped, isFirstInGroup, isLastInGroup, ...props }: any) {\n    const pprops = props;\n    delete pprops.onMenuItemClick;\n    const button = (\n      <Button\n        {...pprops}\n        aria-haspopup\n        buttonRef={(node) => (this.trigger = node)}\n        onClick={this.onTriggerClick}\n        onKeyDown={this.onKeyDown}\n        onBlur={this.onBlur}\n      />\n    );\n\n    if (grouped) {\n      const noneStyle = { display: 'none' };\n      return (\n        <div className='slds-button-group'>\n          {isFirstInGroup ? null : (\n            <button type='button' className='slds-button' style={noneStyle} />\n          )}\n          {button}\n          {isLastInGroup ? null : (\n            <button type='button' className='slds-button' style={noneStyle} />\n          )}\n        </div>\n      );\n    }\n\n    return button;\n  }\n\n  render() {\n    const {\n      className,\n      menuAlign,\n      menuSize,\n      nubbinTop,\n      hoverPopup,\n      menuHeader,\n      type,\n      label,\n      children,\n      style,\n      menuStyle,\n      ...props\n    } = this.props;\n    let { icon } = this.props;\n    const dropdownClassNames = classnames(className, 'slds-dropdown-trigger', {\n      'slds-button-space-left': !props.grouped,\n      'react-slds-dropdown-opened': this.state.opened,\n    });\n    let iconMore = null;\n    if (!label && !icon) {\n      icon = 'down';\n    }\n    if (label || type === 'icon-more') {\n      iconMore = 'down';\n    }\n\n    const dropdown = (\n      <DropdownMenu\n        portalClassName={className}\n        align={menuAlign}\n        header={menuHeader}\n        size={menuSize}\n        nubbinTop={nubbinTop}\n        hoverPopup={hoverPopup}\n        dropdownMenuRef={(node) => (this.dropdown = node)}\n        onMenuSelect={this.onMenuSelect}\n        onMenuClose={this.onMenuClose}\n        onBlur={this.onBlur}\n        style={Object.assign({ transition: 'none' }, menuStyle)}\n      >\n        {children}\n      </DropdownMenu>\n    );\n\n    return (\n      <div\n        className={dropdownClassNames}\n        style={style}\n        ref={(node) => (this.node = node)}\n      >\n        {this.renderButton({ type, label, icon, iconMore, ...props })}\n        {hoverPopup || this.state.opened ? dropdown : undefined}\n      </div>\n    );\n  }\n}\n"],"file":"DropdownButton.js"}