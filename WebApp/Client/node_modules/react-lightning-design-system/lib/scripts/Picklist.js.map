{"version":3,"sources":["../../src/scripts/Picklist.tsx"],"names":["Picklist","props","setState","prevState","opened","setTimeout","focusToTargetItemEl","val","value","multiSelect","updateItemValue","onSelect","onComplete","picklistButtonEl","picklistButton","focus","isFocusedInComponent","onBlur","e","keyCode","preventDefault","stopPropagation","state","onKeyDown","item","selected","getValues","indexOf","React","cloneElement","defaultValue","defaultOpened","initialValue","id","values","Array","isArray","newValues","onValueChange","prevValues","length","selectedValues","optionsSelectedText","selectedValue","Children","forEach","children","label","selectedText","itemValue","slice","push","splice","setValues","targetEl","document","activeElement","node","dropdown","dropdownEl","firstItemEl","querySelector","className","disabled","menuSize","menuStyle","onClick","rprops","picklistClassNames","isOpened","justifyContent","undefined","onKeydown","getSelectedItemLabel","renderDropdown","onPicklistItemSelect","onPicklistClose","map","renderPicklistItem","required","error","totalCols","cols","formElemProps","renderPicklist","Component","PicklistItem"],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties, KeyboardEvent } from 'react';\nimport classnames from 'classnames';\nimport { FormElement, FormElementProps } from './FormElement';\nimport { Icon } from './Icon';\nimport { Button, ButtonProps } from './Button';\nimport {\n  DropdownMenu,\n  DropdownMenuItem,\n  DropdownMenuItemProps,\n  DropdownMenuProps,\n} from './DropdownMenu';\nimport { uuid, isElInChildren } from './util';\n\ntype PicklistValueType<\n  ValueType extends string | number,\n  Multi extends boolean | undefined\n> = Multi extends true\n  ? ValueType[]\n  : Multi extends false | undefined\n  ? ValueType | null\n  : ValueType | ValueType[] | null;\n\nexport type PicklistProps<\n  ValueType extends string | number,\n  MultiSelect extends boolean | undefined\n> = {\n  label?: string;\n  required?: boolean;\n  multiSelect?: MultiSelect;\n  error?: FormElementProps['error'];\n  totalCols?: number;\n  cols?: number;\n  name?: string;\n  value?: PicklistValueType<ValueType, MultiSelect>;\n  defaultValue?: PicklistValueType<ValueType, MultiSelect>;\n  selectedText?: string;\n  optionsSelectedText?: string;\n  opened?: boolean;\n  defaultOpened?: boolean;\n  disabled?: boolean;\n  menuSize?: DropdownMenuProps<any>['size'];\n  menuStyle?: CSSProperties;\n  onValueChange?: (\n    newValue: PicklistValueType<ValueType, MultiSelect>,\n    prevValue: PicklistValueType<ValueType, MultiSelect>\n  ) => void;\n  onSelect?: (value: ValueType) => void;\n  onKeyDown?: (e: KeyboardEvent<HTMLElement>) => void;\n  onBlur?: () => void;\n  onComplete?: () => void;\n} & Omit<\n  ButtonProps,\n  'type' | 'value' | 'defaultValue' | 'onSelect' | 'onBlur' | 'onKeyDown'\n>;\n\nexport type PicklistState<ValueType> = {\n  id: string;\n  opened?: boolean;\n  values: ValueType[];\n};\n\nexport class Picklist<\n  ValueType extends string | number,\n  MultiSelect extends boolean | undefined\n> extends Component<\n  PicklistProps<ValueType, MultiSelect>,\n  PicklistState<ValueType>\n> {\n  static isFormElement = true;\n\n  node: HTMLDivElement | null = null;\n\n  picklistButton: HTMLButtonElement | null = null;\n\n  dropdown: HTMLDivElement | null = null;\n\n  constructor(props: Readonly<PicklistProps<ValueType, MultiSelect>>) {\n    super(props);\n\n    const { value, defaultValue, opened, defaultOpened } = props;\n    const initialValue = typeof value !== 'undefined' ? value : defaultValue;\n\n    this.state = {\n      id: `form-element-${uuid()}`,\n      opened: typeof opened !== 'undefined' ? opened : defaultOpened,\n      values:\n        initialValue == null\n          ? []\n          : Array.isArray(initialValue)\n          ? initialValue\n          : ([initialValue] as ValueType[]),\n    };\n  }\n\n  onClick = () => {\n    this.setState((prevState) => ({ opened: !prevState.opened }));\n    setTimeout(() => {\n      this.focusToTargetItemEl();\n    }, 10);\n  };\n\n  onPicklistItemSelect = (val: string | number) => {\n    const value = val as ValueType;\n    const { multiSelect = false } = this.props;\n    this.updateItemValue(value);\n\n    if (this.props.onSelect) {\n      this.props.onSelect(value);\n    }\n    if (!multiSelect) {\n      // close if only single select\n      setTimeout(() => {\n        this.setState({ opened: false });\n        if (this.props.onComplete) {\n          this.props.onComplete();\n        }\n        const picklistButtonEl = this.picklistButton;\n        if (picklistButtonEl) {\n          picklistButtonEl.focus();\n        }\n      }, 200);\n    }\n  };\n\n  onPicklistClose = () => {\n    const picklistButtonEl = this.picklistButton;\n    if (picklistButtonEl) {\n      picklistButtonEl.focus();\n    }\n    this.setState({ opened: false });\n  };\n\n  onBlur = () => {\n    setTimeout(() => {\n      if (!this.isFocusedInComponent()) {\n        this.setState({ opened: false });\n        if (this.props.onBlur) {\n          this.props.onBlur();\n        }\n        if (this.props.onComplete) {\n          this.props.onComplete();\n        }\n      }\n    }, 10);\n  };\n\n  onKeydown = (e: KeyboardEvent<HTMLButtonElement>) => {\n    if (e.keyCode === 40) {\n      // down\n      e.preventDefault();\n      e.stopPropagation();\n      if (!this.state.opened) {\n        this.setState({ opened: true });\n        setTimeout(() => {\n          this.focusToTargetItemEl();\n        }, 10);\n      } else {\n        this.focusToTargetItemEl();\n      }\n    } else if (e.keyCode === 27) {\n      // ESC\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({ opened: false });\n      if (this.props.onComplete) {\n        this.props.onComplete();\n      }\n    }\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n  };\n\n  getValues(): ValueType[] {\n    const { value } = this.props;\n    // for controlled behavior, returning value from props\n    if (typeof value !== 'undefined') {\n      return value === null\n        ? []\n        : Array.isArray(value)\n        ? value\n        : ([value] as ValueType[]);\n    }\n    // for uncontrolled - value from state\n    return this.state.values;\n  }\n\n  setValues(newValues: ValueType[]) {\n    type PV = PicklistValueType<ValueType, MultiSelect>;\n\n    const { multiSelect = false, onValueChange } = this.props;\n    const prevValues = this.getValues();\n    this.setState({ values: newValues });\n\n    // this is for controlled behavior\n    if (onValueChange && prevValues !== newValues) {\n      if (multiSelect) {\n        onValueChange(newValues as PV, prevValues as PV);\n      } else {\n        onValueChange(\n          (newValues.length > 0 ? newValues[0] : null) as PV,\n          (prevValues.length > 0 ? prevValues[0] : null) as PV\n        );\n      }\n    }\n  }\n\n  getSelectedItemLabel() {\n    const selectedValues = this.getValues();\n\n    // many items selected\n    if (selectedValues.length > 1) {\n      const { optionsSelectedText = '' } = this.props;\n      return optionsSelectedText;\n    }\n\n    // one item\n    if (selectedValues.length === 1) {\n      const selectedValue = selectedValues[0];\n      let selected = null;\n      React.Children.forEach(this.props.children, (item: any) => {\n        if (item.props.value === selectedValue) {\n          selected = item.props.label || item.props.children;\n        }\n      });\n      return selected || selectedValue;\n    }\n\n    // zero items\n    const { selectedText = '' } = this.props;\n    return selectedText;\n  }\n\n  updateItemValue(itemValue: ValueType) {\n    const { multiSelect = false } = this.props;\n\n    if (multiSelect) {\n      const newValues = this.getValues().slice();\n\n      // toggle value\n      if (newValues.indexOf(itemValue) === -1) {\n        // add value to array\n        newValues.push(itemValue);\n      } else {\n        // remove from array\n        newValues.splice(newValues.indexOf(itemValue), 1);\n      }\n      this.setValues(newValues);\n    } else {\n      // set only one value\n      this.setValues([itemValue]);\n    }\n  }\n\n  isFocusedInComponent() {\n    const targetEl = document.activeElement;\n    return (\n      isElInChildren(this.node, targetEl) ||\n      isElInChildren(this.dropdown, targetEl)\n    );\n  }\n\n  focusToTargetItemEl() {\n    const dropdownEl = this.dropdown;\n    if (!dropdownEl) {\n      return;\n    }\n    const firstItemEl: HTMLAnchorElement | null =\n      dropdownEl.querySelector(\n        '.slds-is-selected > .react-slds-menuitem[tabIndex]'\n      ) || dropdownEl.querySelector('.react-slds-menuitem[tabIndex]');\n    if (firstItemEl) {\n      firstItemEl.focus();\n    }\n  }\n\n  renderPicklist(props: PicklistProps<ValueType, MultiSelect>) {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      className,\n      id,\n      disabled,\n      menuSize,\n      menuStyle,\n      value,\n      defaultValue,\n      opened,\n      defaultOpened,\n      selectedText,\n      multiSelect,\n      optionsSelectedText,\n      onSelect,\n      onValueChange,\n      onClick,\n      onBlur,\n      onKeyDown,\n      onComplete,\n      ...rprops\n    } = props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const picklistClassNames = classnames(\n      className,\n      'slds-picklist',\n      'slds-dropdown-trigger'\n    );\n    const isOpened = typeof opened !== 'undefined' ? opened : this.state.opened;\n    return (\n      <div className={picklistClassNames} aria-expanded={isOpened}>\n        <Button\n          id={id}\n          buttonRef={(node) => (this.picklistButton = node)}\n          {...rprops}\n          className='slds-picklist__label'\n          style={{ justifyContent: 'normal' }}\n          type='neutral'\n          disabled={disabled}\n          onClick={disabled ? undefined : this.onClick}\n          onBlur={disabled ? undefined : this.onBlur}\n          onKeyDown={disabled ? undefined : this.onKeydown}\n        >\n          <span className='slds-truncate'>\n            {this.getSelectedItemLabel() || <span>&nbsp;</span>}\n          </span>\n          <Icon icon='down' />\n        </Button>\n        {this.renderDropdown(menuSize, menuStyle)}\n      </div>\n    );\n  }\n\n  renderDropdown(\n    menuSize: PicklistProps<ValueType, MultiSelect>['menuSize'],\n    menuStyle: PicklistProps<ValueType, MultiSelect>['menuStyle']\n  ) {\n    const { className, opened, children } = this.props;\n    const isOpened = typeof opened !== 'undefined' ? opened : this.state.opened;\n    return isOpened ? (\n      <DropdownMenu\n        portalClassName={classnames(className, 'slds-picklist')}\n        dropdownMenuRef={(node: HTMLDivElement) => (this.dropdown = node)}\n        size={menuSize}\n        style={menuStyle}\n        onMenuSelect={this.onPicklistItemSelect}\n        onMenuClose={this.onPicklistClose}\n        onBlur={this.onBlur}\n      >\n        {React.Children.map(children, this.renderPicklistItem)}\n      </DropdownMenu>\n    ) : (\n      <div ref={(node) => (this.dropdown = node)} />\n    );\n  }\n\n  renderPicklistItem = (item: any) => {\n    const selected = this.getValues().indexOf(item.props.value) !== -1;\n    const { onBlur } = this;\n    return React.cloneElement(item, { selected, onBlur });\n  };\n\n  render() {\n    const id = this.props.id || this.state.id;\n    const { label, required, error, totalCols, cols, ...props } = this.props;\n    const formElemProps = { id, label, required, error, totalCols, cols };\n    return (\n      <FormElement\n        formElementRef={(node) => (this.node = node)}\n        {...formElemProps}\n      >\n        {this.renderPicklist({ ...props, id })}\n      </FormElement>\n    );\n  }\n}\n\nexport type PicklistItemProps = DropdownMenuItemProps & {\n  selected?: boolean;\n  disabled?: boolean;\n  value?: string | number;\n};\n\nexport const PicklistItem: React.FC<PicklistItemProps> = ({\n  label,\n  selected,\n  value,\n  children,\n  ...props\n}) => (\n  <DropdownMenuItem\n    icon={selected ? 'check' : 'none'}\n    role='menuitemradio'\n    selected={selected}\n    eventKey={value}\n    {...props}\n  >\n    {label || children}\n  </DropdownMenuItem>\n);\n"],"file":"Picklist.js"}