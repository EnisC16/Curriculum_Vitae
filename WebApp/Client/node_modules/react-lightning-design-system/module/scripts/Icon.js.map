{"version":3,"sources":["../../src/scripts/Icon.tsx"],"names":["React","Component","PropTypes","classnames","svg4everybody","registerStyle","getAssetRoot","STANDARD_ICONS","replace","split","CUSTOM_ICONS","Array","join","map","a","i","ACTION_ICONS","DOCTYPE_ICONS","UTILITY_ICONS","Icon","props","state","iconContainer","svgIcon","checkIconColor","svgEl","tabIndex","undefined","setAttribute","toString","fillColor","category","icon","iconColor","test","container","el","bgColorStyle","getComputedStyle","backgroundColor","setState","className","size","align","textColor","style","assetRoot","getIconColor","iconClassNames","iconUrl","node","context","indexOf","containerClassName","pprops","ccontainerClassName","renderSVG","string"],"mappings":"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","sourcesContent":["import React, { Component, SVGAttributes } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport svg4everybody from 'svg4everybody';\nimport { registerStyle, getAssetRoot } from './util';\nimport { ComponentSettingsContext } from './ComponentSettings';\n\nsvg4everybody();\n\n/* eslint-disable max-len */\nconst STANDARD_ICONS = `\naccount,announcement,answer_best,answer_private,answer_public,approval,apps,apps_admin,\narticle,avatar,avatar_loading,calibration,call,call_history,campaign,campaign_members,\ncanvas,case,case_change_status,case_comment,case_email,case_log_a_call,case_transcript,\nclient,coaching,connected_apps,contact,contract,custom,dashboard,default,document,\ndrafts,email,email_IQ,email_chatter,empty,endorsement,environment_hub,event,feed,feedback,\nfile,flow,folder,generic_loading,goals,group_loading,groups,hierarchy,home,household,insights,investment_account,\nlead,link,log_a_call,marketing_actions,metrics,news,note,opportunity,\norders,people,performance,person_account,photo,poll,portal,post,pricebook,process,product,question_best,\nquestion_feed,quotes,recent,record,related_list,report,reward,scan_card,skill_entity,\nsocial,solution,sossession,task,task2,team_member,thanks,thanks_loading,today,topic,\nunmatched,user,work_order,work_order_item\n`\n  .replace(/^\\s+|\\s+$/g, '')\n  .split(/[\\s,]+/);\n\nconst CUSTOM_ICONS = new Array(101)\n  .join('_')\n  .split('')\n  .map((a, i) => `custom${i + 1}`);\n\nconst ACTION_ICONS = `\nadd_contact,announcement,apex,approval,back,call,canvas,change_owner,change_record_type,\ncheck,clone,close,defer,delete,description,dial_in,download,edit,edit_groups,edit_relationship,\nemail,fallback,filter,flow,follow,following,freeze_user,goal,google_news,info,join_group,\nlead_convert,leave_group,log_a_call,log_event,manage_perm_sets,map,more,new,new_account,\nnew_campaign,new_case,new_child_case,new_contact,new_event,new_group,new_lead,new_note,\nnew_notebook,new_opportunity,new_person_account,new_task,password_unlock,preview,priority,question_post_action,\nquote,record,refresh,reject,remove,reset_password,share,share_file,share_link,share_poll,\nshare_post,share_thanks,sort,submit_for_approval,update,update_status,upload,user,user_activation,\nweb_link,\nnew_custom7,new_custom8,new_custom9,new_custom10,new_custom11,new_custom12,new_custom13,\nnew_custom14,new_custom15,new_custom16,new_custom17,new_custom18,new_custom19,new_custom20,\nnew_custom21,new_custom22,new_custom23,new_custom24,new_custom25,new_custom26,new_custom27,\nnew_custom28,new_custom29,new_custom30,new_custom31,new_custom32,new_custom33,new_custom34,\nnew_custom35,new_custom36,new_custom37,new_custom38,new_custom39,new_custom40,new_custom41,\nnew_custom42,new_custom43,new_custom44,new_custom45,new_custom46,new_custom47,new_custom48,\nnew_custom49,new_custom50,new_custom51,new_custom52,new_custom53,new_custom54,new_custom55,\nnew_custom56,new_custom57,new_custom58,new_custom59,new_custom60,new_custom61,new_custom62,\nnew_custom63,new_custom64,new_custom65,new_custom66,new_custom67,new_custom68,new_custom69,\nnew_custom70,new_custom71,new_custom72,new_custom73,new_custom74,new_custom75,new_custom76,\nnew_custom77,new_custom78,new_custom79,new_custom80,new_custom81,new_custom82,new_custom83,\nnew_custom84,new_custom85,new_custom86,new_custom87,new_custom88,new_custom89,new_custom90,\nnew_custom91,new_custom92,new_custom93,new_custom94,new_custom95,new_custom96,new_custom97,\nnew_custom98,new_custom99,new_custom100\n`\n  .replace(/^\\s+|\\s+$/g, '')\n  .split(/[\\s,]+/);\n\nconst DOCTYPE_ICONS = `\nai,attachment,audio,box_notes,csv,eps,excel,exe,flash,gdoc,gdocs,gpres,gsheet,html,image,keynote,\nlink,mp4,overlay,pack,pages,pdf,ppt,psd,rtf,slide,stypi,txt,unknown,video,visio,\nwebex,word,xml,zip\n`\n  .replace(/^\\s+|\\s+$/g, '')\n  .split(/[\\s,]+/);\n\nconst UTILITY_ICONS = `\nadd,adduser,announcement,answer,apps,arrowdown,arrowup,attach,back,ban,bold,bookmark,brush,\nbucket,builder,call,capslock,cases,center_align_text,chart,chat,check,checkin,chevrondown,\nchevronleft,chevronright,chevronup,clear,clock,close,comments,company,connected_apps,\ncontract,contract_alt,copy,crossfilter,custom_apps,cut,dash,datadotcom,dayview,delete,deprecate,\ndescription,desktop,down,download,edit,edit_form,email,end_call,erect_window,error,event,expand,\nexpand_alt,favorite,feed,file,filter,filterList,forward,frozen,groups,help,home,identity,image,inbox,info,\ninsert_tag_field,insert_template,italic,justify_text,kanban,knowledge_base,layers,layout,\nleft,left_align_text,like,link,list,location,lock,log_a_call,logout,magicwand,matrix,metrics,minimize_window,\nmoneybag,monthlyview,move,muted,new,new_window,news,note,notebook,notification,office365,offline,\nopen,open_folder,opened_folder,overflow,package,package_org,package_org_beta,page,palette,paste,\npeople,phone_landscape,phone_portrait,photo,picklist,power,preview,priority,process,push,puzzle,\nquestion,questions_and_answers,record,redo,refresh,relate,remove_formatting,remove_link,\nreplace,reply,reset_password,retweet,richtextbulletedlist,richtextindent,richtextnumberedlist,\nrichtextoutdent,right,right_align_text,rotate,rows,salesforce1,search,settings,setup,setup_assistant_guide,\nshare,share_post,shield,side_list,signpost,sms,snippet,socialshare,sort,spinner,standard_objects,\nstop,strikethrough,success,summary,summarydetail,switch,table,tablet_landscape,tablet_portrait,\ntabset,task,text_background_color,text_color,threedots,tile_card_list,topic,touch_action,trail,undelete,undeprecate,\nunderline,undo,unlock,unmuted,up,upload,user,user_role,volume_high,volume_low,volume_off,warning,\nweeklyview,world,zoomin,zoomout\n`\n  .replace(/^\\s+|\\s+$/g, '')\n  .split(/[\\s,]+/);\n/* eslint-enable max-len */\n\nexport type IconCategory =\n  | 'action'\n  | 'custom'\n  | 'doctype'\n  | 'standard'\n  | 'utility';\nexport type IconSize = 'x-small' | 'small' | 'medium' | 'large';\nexport type IconContainer = boolean | 'default' | 'circle';\nexport type IconTextColor = 'default' | 'warning' | 'error' | null;\n\nexport type IconProps = {\n  containerClassName?: string;\n  category?: IconCategory;\n  icon: string;\n  size?: IconSize;\n  align?: 'left' | 'right';\n  container?: IconContainer;\n  color?: string;\n  textColor?: IconTextColor;\n  tabIndex?: number;\n  fillColor?: string;\n} & SVGAttributes<SVGElement>;\n\nexport type IconState = {\n  iconColor?: string;\n};\n\nexport class Icon extends Component<IconProps, IconState> {\n  static contextTypes = { assetRoot: PropTypes.string };\n\n  static ICONS = {\n    STANDARD_ICONS,\n    CUSTOM_ICONS,\n    ACTION_ICONS,\n    DOCTYPE_ICONS,\n    UTILITY_ICONS,\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  context!: Pick<ComponentSettingsContext, 'assetRoot'>;\n\n  iconContainer: HTMLSpanElement | null;\n\n  svgIcon: SVGElement | null;\n\n  constructor(props: Readonly<IconProps & SVGAttributes<SVGElement>>) {\n    super(props);\n    this.state = {};\n    this.iconContainer = null;\n    this.svgIcon = null;\n    registerStyle('icon', [['.slds-icon use', '{ pointer-events: none; }']]);\n  }\n\n  componentDidMount() {\n    this.checkIconColor();\n    const svgEl = this.svgIcon;\n    if (svgEl && this.props.tabIndex !== undefined) {\n      svgEl.setAttribute('focusable', (this.props.tabIndex >= 0).toString());\n    }\n  }\n\n  componentDidUpdate() {\n    this.checkIconColor();\n  }\n\n  getIconColor(\n    fillColor: string | undefined,\n    category: string | undefined,\n    icon: string\n  ) {\n    /* eslint-disable no-unneeded-ternary */\n    return this.state.iconColor\n      ? this.state.iconColor\n      : category === 'doctype'\n      ? undefined\n      : fillColor === 'none'\n      ? undefined\n      : fillColor\n      ? fillColor\n      : category === 'utility'\n      ? undefined\n      : category === 'custom'\n      ? icon.replace(/^custom/, 'custom-')\n      : category === 'action' && /^new_custom/.test(icon)\n      ? icon.replace(/^new_custom/, 'custom-')\n      : `${category}-${(icon || '').replace(/_/g, '-')}`;\n    /* eslint-enable no-unneeded-ternary */\n  }\n\n  checkIconColor() {\n    const { fillColor, category = 'utility', container } = this.props;\n    const { iconColor } = this.state;\n    if (\n      fillColor ||\n      category === 'doctype' ||\n      (!fillColor && category === 'utility') ||\n      iconColor === 'standard-default'\n    ) {\n      return;\n    }\n    const el = container ? this.iconContainer : this.svgIcon;\n    if (!el) {\n      return;\n    }\n    const bgColorStyle = getComputedStyle(el).backgroundColor;\n    // if no background color set to the icon\n    if (\n      bgColorStyle &&\n      /^(transparent|rgba\\(0,\\s*0,\\s*0,\\s*0\\))$/.test(bgColorStyle)\n    ) {\n      this.setState({ iconColor: 'standard-default' });\n    }\n  }\n\n  renderSVG({\n    className = '',\n    category = 'utility',\n    size = '',\n    icon,\n    align,\n    fillColor,\n    container,\n    textColor = 'default',\n    style,\n    assetRoot,\n    ...props\n  }: Omit<IconProps, 'category' | 'size'> & {\n    category: string | undefined;\n    size: string | undefined;\n    assetRoot: string;\n  }) {\n    const iconColor = this.getIconColor(fillColor, category, icon);\n    const iconClassNames = classnames(\n      {\n        'slds-icon': !/slds-button__icon/.test(className),\n        [`slds-icon_${size}`]: /^(x-small|small|medium|large)$/.test(size),\n        [`slds-icon-text-${textColor}`]:\n          /^(default|warning|error)$/.test(textColor || '') && !iconColor,\n        [`slds-icon-${iconColor}`]: !container && iconColor,\n        'slds-m-left_x-small': align === 'right',\n        'slds-m-right_x-small': align === 'left',\n      },\n      className\n    );\n\n    // icon and category prop should not include chars other than alphanumerics, underscore, and hyphen\n    icon = (icon || '').replace(/[^\\w-]/g, ''); // eslint-disable-line no-param-reassign\n    category = (category || '').replace(/[^\\w-]/g, ''); // eslint-disable-line no-param-reassign\n\n    const iconUrl = `${assetRoot}/icons/${category}-sprite/svg/symbols.svg#${icon}`;\n    return (\n      <svg\n        className={iconClassNames}\n        aria-hidden\n        ref={(node) => (this.svgIcon = node)}\n        style={style}\n        {...props}\n      >\n        <use xlinkHref={iconUrl} />\n      </svg>\n    );\n  }\n\n  render() {\n    const { container, size, ...props } = this.props;\n    const { assetRoot = getAssetRoot() } = this.context;\n    let { category, icon } = props;\n\n    if (icon.indexOf(':') > 0) {\n      [category, icon] = icon.split(':') as [IconProps['category'], string];\n    }\n    if (container) {\n      const { containerClassName, fillColor, ...pprops } = props;\n      const iconColor = this.getIconColor(fillColor, category, icon);\n      const ccontainerClassName = classnames(\n        containerClassName,\n        'slds-icon_container',\n        container === 'circle' ? 'slds-icon_container_circle' : null,\n        iconColor ? `slds-icon-${iconColor}` : null\n      );\n      return (\n        <span\n          className={ccontainerClassName}\n          ref={(node) => (this.iconContainer = node)}\n        >\n          {this.renderSVG({\n            ...pprops,\n            size,\n            category,\n            icon,\n            fillColor: iconColor,\n            container,\n            assetRoot,\n          })}\n        </span>\n      );\n    }\n\n    return this.renderSVG({ ...props, category, icon, size, assetRoot });\n  }\n}\n"],"file":"Icon.js"}