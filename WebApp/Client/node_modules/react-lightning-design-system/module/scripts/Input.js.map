{"version":3,"sources":["../../src/scripts/Input.tsx"],"names":["React","Component","classnames","keycoder","Icon","FormElement","Text","uuid","registerStyle","Input","props","e","onChange","onValueChange","target","value","symbolPattern","onKeyDown","keyCode","shiftKey","toCharacter","match","RegExp","preventDefault","registerIconStyle","content","icon","align","isValidElement","id","readOnly","className","inputRef","type","bare","defaultValue","htmlReadOnly","pprops","inputClassNames","label","required","error","totalCols","cols","formElemProps","iconLeft","iconRight","addonLeft","addonRight","inputProps","wrapperClassName","renderAddon","undefined","renderIcon","renderInput"],"mappings":"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","sourcesContent":["import React, {\n  Component,\n  InputHTMLAttributes,\n  KeyboardEvent,\n  ChangeEvent,\n} from 'react';\nimport classnames from 'classnames';\nimport keycoder from 'keycoder';\nimport { Icon } from './Icon';\nimport { FormElement, FormElementProps } from './FormElement';\nimport { Text } from './Text';\nimport { uuid, registerStyle } from './util';\n\nexport type InputProps = {\n  label?: string;\n  required?: boolean;\n  error?: FormElementProps['error'];\n  totalCols?: number;\n  cols?: number;\n  value?: string;\n  defaultValue?: string;\n  placeholder?: string;\n  bare?: boolean;\n  symbolPattern?: string;\n  readOnly?: boolean;\n  htmlReadOnly?: boolean;\n  iconLeft?: string | JSX.Element;\n  iconRight?: string | JSX.Element;\n  addonLeft?: string;\n  addonRight?: string;\n  onValueChange?: (value: string) => void;\n  inputRef?: (node: HTMLInputElement) => void;\n} & Omit<InputHTMLAttributes<HTMLInputElement>, 'value' | 'defaultValue'>;\n\nexport class Input extends Component<InputProps> {\n  static isFormElement = true;\n\n  constructor(props: Readonly<InputProps>) {\n    super(props);\n    this.registerIconStyle();\n  }\n\n  onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { onChange, onValueChange } = this.props;\n    if (onChange) {\n      onChange(e);\n    }\n    if (onValueChange) {\n      onValueChange(e.target.value);\n    }\n  };\n\n  onKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    const { symbolPattern, onKeyDown } = this.props;\n    if (symbolPattern) {\n      const { keyCode, shiftKey } = e;\n      const value = keycoder.toCharacter(keyCode, shiftKey);\n      if (value && !value.match(new RegExp(symbolPattern))) {\n        e.preventDefault();\n        return;\n      }\n    }\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n  };\n\n  registerIconStyle() {\n    registerStyle('input-icons', [\n      // fix styles of double-iconed input\n      [\n        '.slds-input-has-icon_left-right .slds-input__icon_right',\n        '{ left: auto; }',\n      ],\n    ]);\n  }\n\n  renderAddon(content: string) {\n    return (\n      <Text\n        tag='span'\n        className='slds-form-element__addon'\n        category='body'\n        type='regular'\n      >\n        {content}\n      </Text>\n    );\n  }\n\n  renderIcon(icon: any, align: 'left' | 'right') {\n    return React.isValidElement(icon) ? (\n      icon\n    ) : (\n      <Icon\n        icon={icon}\n        className={classnames(\n          'slds-input__icon',\n          `slds-input__icon_${align}`,\n          'slds-icon-text-default'\n        )}\n      />\n    );\n  }\n\n  renderInput(props: InputProps) {\n    const {\n      id,\n      readOnly,\n      className,\n      inputRef,\n      type,\n      bare,\n      value,\n      defaultValue,\n      htmlReadOnly,\n      ...pprops\n    } = props;\n    const inputClassNames = classnames(\n      className,\n      bare ? 'slds-input_bare' : 'slds-input'\n    );\n    return readOnly ? (\n      <Text\n        type='regular'\n        category='body'\n        className='slds-form-element__static'\n        id={id}\n      >\n        {value}\n      </Text>\n    ) : (\n      <input\n        ref={inputRef}\n        className={inputClassNames}\n        id={id}\n        type={type}\n        value={value}\n        defaultValue={defaultValue}\n        readOnly={htmlReadOnly}\n        {...pprops}\n        onChange={this.onChange}\n        onKeyDown={this.onKeyDown}\n      />\n    );\n  }\n\n  render() {\n    const {\n      id = `input-${uuid()}`,\n      label,\n      required,\n      error,\n      readOnly,\n      totalCols,\n      cols,\n      ...props\n    } = this.props;\n    if (label || required || error || totalCols || cols) {\n      const formElemProps = {\n        id,\n        label,\n        required,\n        error,\n        readOnly,\n        totalCols,\n        cols,\n      };\n      return (\n        <FormElement {...formElemProps}>\n          <Input {...{ id, readOnly, ...props }} />\n        </FormElement>\n      );\n    }\n    const { iconLeft, iconRight, addonLeft, addonRight, ...pprops } = props;\n    const inputProps = { ...pprops, id, readOnly };\n    if (iconLeft || iconRight || addonLeft || addonRight) {\n      const wrapperClassName = classnames(\n        'slds-form-element__control',\n        { 'slds-input-has-icon': iconLeft || iconRight },\n        { 'slds-input-has-icon_left-right': iconLeft && iconRight },\n        { 'slds-input-has-icon_left': iconLeft },\n        { 'slds-input-has-icon_right': iconRight },\n        { 'slds-input-has-fixed-addon': addonLeft || addonRight }\n      );\n      return (\n        <div className={wrapperClassName}>\n          {addonLeft ? this.renderAddon(addonLeft) : undefined}\n          {iconLeft ? this.renderIcon(iconLeft, 'left') : undefined}\n          {this.renderInput(inputProps)}\n          {iconRight ? this.renderIcon(iconRight, 'right') : undefined}\n          {addonRight ? this.renderAddon(addonRight) : undefined}\n        </div>\n      );\n    }\n    return this.renderInput(inputProps);\n  }\n}\n"],"file":"Input.js"}