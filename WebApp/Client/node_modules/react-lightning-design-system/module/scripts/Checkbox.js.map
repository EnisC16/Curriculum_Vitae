{"version":3,"sources":["../../src/scripts/Checkbox.tsx"],"names":["React","Component","classnames","FormElement","Checkbox","nextProps","node","input","getElementsByTagName","defaultChecked","undefined","checked","className","label","checkboxRef","props","checkClassNames","grouped","required","error","totalCols","cols","formElemProps","renderCheckbox"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAsD,OAAtD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA8C,eAA9C;AAgBA,WAAaC,QAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,2DACmD,IADnD;;AAAA;AAAA;;AAAA;AAAA;AAAA,8CAG4BC,SAH5B,EAGgE;AAC5D,UAAI,KAAKC,IAAT,EAAe;AACb,YAAMC,KAAK,GAAG,KAAKD,IAAL,CAAUE,oBAAV,CAA+B,OAA/B,EAAwC,CAAxC,CAAd;;AACA,YACEH,SAAS,CAACI,cAAV,KAA6BC,SAA7B,IACAL,SAAS,CAACI,cAAV,KAA6BF,KAAK,CAACI,OAFrC,EAGE;AACAJ,UAAAA,KAAK,CAACI,OAAN,GAAgBN,SAAS,CAACI,cAA1B;AACD;AACF;AACF;AAbH;AAAA;AAAA,yCAe6E;AAAA;;AAAA,UAA1DG,SAA0D,QAA1DA,SAA0D;AAAA,UAA/CC,KAA+C,QAA/CA,KAA+C;AAAA,UAAxCC,WAAwC,QAAxCA,WAAwC;AAAA,UAAxBC,KAAwB;;AACzE,UAAMC,eAAe,GAAGd,UAAU,CAACU,SAAD,EAAY,eAAZ,CAAlC;AACA,0BACE;AACE,QAAA,GAAG,EAAE,aAACN,IAAD,EAAU;AACb,UAAA,MAAI,CAACA,IAAL,GAAYA,IAAZ;AACA,cAAIQ,WAAJ,EAAiBA,WAAW,CAACR,IAAD,CAAX;AAClB,SAJH;AAKE,QAAA,SAAS,EAAEU;AALb,sBAOE;AAAO,QAAA,IAAI,EAAC;AAAZ,SAA2BD,KAA3B,EAPF,eAQE;AAAM,QAAA,SAAS,EAAC;AAAhB,QARF,eASE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA4CF,KAA5C,CATF,CADF;AAaD;AA9BH;AAAA;AAAA,6BAgCW;AAAA;;AAAA,wBACyD,KAAKE,KAD9D;AAAA,UACCE,OADD,eACCA,OADD;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACoBC,KADpB,eACoBA,KADpB;AAAA,UAC2BC,SAD3B,eAC2BA,SAD3B;AAAA,UACsCC,IADtC,eACsCA,IADtC;AAAA,UAC+CN,KAD/C;;AAEP,UAAMO,aAAa,GAAG;AAAEJ,QAAAA,QAAQ,EAARA,QAAF;AAAYC,QAAAA,KAAK,EAALA,KAAZ;AAAmBC,QAAAA,SAAS,EAATA,SAAnB;AAA8BC,QAAAA,IAAI,EAAJA;AAA9B,OAAtB;AACA,aAAOJ,OAAO,GACZ,KAAKM,cAAL,CAAoBR,KAApB,CADY,gBAGZ,oBAAC,WAAD;AACE,QAAA,cAAc,EAAE,wBAACT,IAAD;AAAA,iBAAW,MAAI,CAACA,IAAL,GAAYA,IAAvB;AAAA;AADlB,SAEMgB,aAFN,GAIG,KAAKC,cAAL,CAAoBR,KAApB,CAJH,CAHF;AAUD;AA7CH;;AAAA;AAAA,EAA8Bd,SAA9B","sourcesContent":["import React, { Component, InputHTMLAttributes } from 'react';\nimport classnames from 'classnames';\nimport { FormElement, FormElementProps } from './FormElement';\n\nexport type CheckboxProps = {\n  label?: string;\n  required?: boolean;\n  error?: FormElementProps['error'];\n  totalCols?: number;\n  cols?: number;\n  grouped?: boolean;\n  name?: string;\n  value?: string | number;\n  checked?: boolean;\n  defaultChecked?: boolean;\n  checkboxRef?: (node: HTMLLabelElement | null) => void;\n} & InputHTMLAttributes<HTMLInputElement>;\n\nexport class Checkbox extends Component<CheckboxProps> {\n  node: HTMLDivElement | HTMLLabelElement | null = null;\n\n  componentWillReceiveProps(nextProps: Readonly<CheckboxProps>) {\n    if (this.node) {\n      const input = this.node.getElementsByTagName('input')[0];\n      if (\n        nextProps.defaultChecked !== undefined &&\n        nextProps.defaultChecked !== input.checked\n      ) {\n        input.checked = nextProps.defaultChecked;\n      }\n    }\n  }\n\n  renderCheckbox({ className, label, checkboxRef, ...props }: CheckboxProps) {\n    const checkClassNames = classnames(className, 'slds-checkbox');\n    return (\n      <label\n        ref={(node) => {\n          this.node = node;\n          if (checkboxRef) checkboxRef(node);\n        }}\n        className={checkClassNames}\n      >\n        <input type='checkbox' {...props} />\n        <span className='slds-checkbox_faux' />\n        <span className='slds-form-element__label'>{label}</span>\n      </label>\n    );\n  }\n\n  render() {\n    const { grouped, required, error, totalCols, cols, ...props } = this.props;\n    const formElemProps = { required, error, totalCols, cols };\n    return grouped ? (\n      this.renderCheckbox(props)\n    ) : (\n      <FormElement\n        formElementRef={(node) => (this.node = node)}\n        {...formElemProps}\n      >\n        {this.renderCheckbox(props)}\n      </FormElement>\n    );\n  }\n}\n"],"file":"Checkbox.js"}