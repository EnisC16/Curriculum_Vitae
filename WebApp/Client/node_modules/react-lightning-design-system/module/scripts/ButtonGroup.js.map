{"version":3,"sources":["../../src/scripts/ButtonGroup.tsx"],"names":["React","Component","Children","classnames","DropdownButton","ButtonGroup","props","renderButton","bind","button","index","cnt","count","children","type","isGroupable","cloneElement","key","grouped","isFirstInGroup","isLastInGroup","className","btnGrpClassNames","map"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2D,OAA3D;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAIA,WAAaC,WAAb;AAAA;;AAAA;;AACE,uBAAYC,KAAZ,EAA+C;AAAA;;AAAA;;AAC7C,8BAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAF6C;AAG9C;;AAJH;AAAA;AAAA,iCAMeC,MANf,EAM4BC,KAN5B,EAM2C;AACvC,UAAMC,GAAG,GAAGX,KAAK,CAACE,QAAN,CAAeU,KAAf,CAAqB,KAAKN,KAAL,CAAWO,QAAhC,CAAZ;;AACA,UACEJ,MAAM,CAACK,IAAP,KACCL,MAAM,CAACK,IAAP,KAAgBV,cAAhB,IAAkCK,MAAM,CAACK,IAAP,CAAYC,WAD/C,CADF,EAGE;AACA,4BAAOf,KAAK,CAACgB,YAAN,CAAmBP,MAAnB,EAA2B;AAChCQ,UAAAA,GAAG,EAAEP,KAD2B;AAEhCQ,UAAAA,OAAO,EAAE,IAFuB;AAGhCC,UAAAA,cAAc,EAAET,KAAK,KAAK,CAHM;AAIhCU,UAAAA,aAAa,EAAEV,KAAK,KAAKC,GAAG,GAAG;AAJC,SAA3B,CAAP;AAMD;;AAED,aAAOF,MAAP;AACD;AArBH;AAAA;AAAA,6BAuBW;AAAA,wBACmC,KAAKH,KADxC;AAAA,UACCe,SADD,eACCA,SADD;AAAA,UACYR,QADZ,eACYA,QADZ;AAAA,UACyBP,KADzB;;AAEP,UAAMgB,gBAAgB,GAAGnB,UAAU,CAACkB,SAAD,EAAY,mBAAZ,CAAnC;AACA,0BACE;AAAK,QAAA,SAAS,EAAEC,gBAAhB;AAAkC,QAAA,IAAI,EAAC;AAAvC,SAAmDhB,KAAnD,GACGJ,QAAQ,CAACqB,GAAT,CAAaV,QAAb,EAAuB,KAAKN,YAA5B,CADH,CADF;AAKD;AA/BH;;AAAA;AAAA,EAAiCN,SAAjC","sourcesContent":["import React, { Component, Children, HTMLAttributes } from 'react';\nimport classnames from 'classnames';\nimport { DropdownButton } from './DropdownButton';\n\nexport type ButtonGroupProps = {} & HTMLAttributes<HTMLDivElement>;\n\nexport class ButtonGroup extends Component<ButtonGroupProps, {}> {\n  constructor(props: Readonly<ButtonGroupProps>) {\n    super(props);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  renderButton(button: any, index: number) {\n    const cnt = React.Children.count(this.props.children);\n    if (\n      button.type &&\n      (button.type === DropdownButton || button.type.isGroupable)\n    ) {\n      return React.cloneElement(button, {\n        key: index,\n        grouped: true,\n        isFirstInGroup: index === 0,\n        isLastInGroup: index === cnt - 1,\n      });\n    }\n\n    return button;\n  }\n\n  render() {\n    const { className, children, ...props } = this.props;\n    const btnGrpClassNames = classnames(className, 'slds-button-group');\n    return (\n      <div className={btnGrpClassNames} role='group' {...props}>\n        {Children.map(children, this.renderButton)}\n      </div>\n    );\n  }\n}\n"],"file":"ButtonGroup.js"}