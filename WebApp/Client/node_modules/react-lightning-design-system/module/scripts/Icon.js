import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import svg4everybody from 'svg4everybody';
import { registerStyle, getAssetRoot } from './util';
svg4everybody();
/* eslint-disable max-len */

var STANDARD_ICONS = "\naccount,announcement,answer_best,answer_private,answer_public,approval,apps,apps_admin,\narticle,avatar,avatar_loading,calibration,call,call_history,campaign,campaign_members,\ncanvas,case,case_change_status,case_comment,case_email,case_log_a_call,case_transcript,\nclient,coaching,connected_apps,contact,contract,custom,dashboard,default,document,\ndrafts,email,email_IQ,email_chatter,empty,endorsement,environment_hub,event,feed,feedback,\nfile,flow,folder,generic_loading,goals,group_loading,groups,hierarchy,home,household,insights,investment_account,\nlead,link,log_a_call,marketing_actions,metrics,news,note,opportunity,\norders,people,performance,person_account,photo,poll,portal,post,pricebook,process,product,question_best,\nquestion_feed,quotes,recent,record,related_list,report,reward,scan_card,skill_entity,\nsocial,solution,sossession,task,task2,team_member,thanks,thanks_loading,today,topic,\nunmatched,user,work_order,work_order_item\n".replace(/^\s+|\s+$/g, '').split(/[\s,]+/);
var CUSTOM_ICONS = new Array(101).join('_').split('').map(function (a, i) {
  return "custom".concat(i + 1);
});
var ACTION_ICONS = "\nadd_contact,announcement,apex,approval,back,call,canvas,change_owner,change_record_type,\ncheck,clone,close,defer,delete,description,dial_in,download,edit,edit_groups,edit_relationship,\nemail,fallback,filter,flow,follow,following,freeze_user,goal,google_news,info,join_group,\nlead_convert,leave_group,log_a_call,log_event,manage_perm_sets,map,more,new,new_account,\nnew_campaign,new_case,new_child_case,new_contact,new_event,new_group,new_lead,new_note,\nnew_notebook,new_opportunity,new_person_account,new_task,password_unlock,preview,priority,question_post_action,\nquote,record,refresh,reject,remove,reset_password,share,share_file,share_link,share_poll,\nshare_post,share_thanks,sort,submit_for_approval,update,update_status,upload,user,user_activation,\nweb_link,\nnew_custom7,new_custom8,new_custom9,new_custom10,new_custom11,new_custom12,new_custom13,\nnew_custom14,new_custom15,new_custom16,new_custom17,new_custom18,new_custom19,new_custom20,\nnew_custom21,new_custom22,new_custom23,new_custom24,new_custom25,new_custom26,new_custom27,\nnew_custom28,new_custom29,new_custom30,new_custom31,new_custom32,new_custom33,new_custom34,\nnew_custom35,new_custom36,new_custom37,new_custom38,new_custom39,new_custom40,new_custom41,\nnew_custom42,new_custom43,new_custom44,new_custom45,new_custom46,new_custom47,new_custom48,\nnew_custom49,new_custom50,new_custom51,new_custom52,new_custom53,new_custom54,new_custom55,\nnew_custom56,new_custom57,new_custom58,new_custom59,new_custom60,new_custom61,new_custom62,\nnew_custom63,new_custom64,new_custom65,new_custom66,new_custom67,new_custom68,new_custom69,\nnew_custom70,new_custom71,new_custom72,new_custom73,new_custom74,new_custom75,new_custom76,\nnew_custom77,new_custom78,new_custom79,new_custom80,new_custom81,new_custom82,new_custom83,\nnew_custom84,new_custom85,new_custom86,new_custom87,new_custom88,new_custom89,new_custom90,\nnew_custom91,new_custom92,new_custom93,new_custom94,new_custom95,new_custom96,new_custom97,\nnew_custom98,new_custom99,new_custom100\n".replace(/^\s+|\s+$/g, '').split(/[\s,]+/);
var DOCTYPE_ICONS = "\nai,attachment,audio,box_notes,csv,eps,excel,exe,flash,gdoc,gdocs,gpres,gsheet,html,image,keynote,\nlink,mp4,overlay,pack,pages,pdf,ppt,psd,rtf,slide,stypi,txt,unknown,video,visio,\nwebex,word,xml,zip\n".replace(/^\s+|\s+$/g, '').split(/[\s,]+/);
var UTILITY_ICONS = "\nadd,adduser,announcement,answer,apps,arrowdown,arrowup,attach,back,ban,bold,bookmark,brush,\nbucket,builder,call,capslock,cases,center_align_text,chart,chat,check,checkin,chevrondown,\nchevronleft,chevronright,chevronup,clear,clock,close,comments,company,connected_apps,\ncontract,contract_alt,copy,crossfilter,custom_apps,cut,dash,datadotcom,dayview,delete,deprecate,\ndescription,desktop,down,download,edit,edit_form,email,end_call,erect_window,error,event,expand,\nexpand_alt,favorite,feed,file,filter,filterList,forward,frozen,groups,help,home,identity,image,inbox,info,\ninsert_tag_field,insert_template,italic,justify_text,kanban,knowledge_base,layers,layout,\nleft,left_align_text,like,link,list,location,lock,log_a_call,logout,magicwand,matrix,metrics,minimize_window,\nmoneybag,monthlyview,move,muted,new,new_window,news,note,notebook,notification,office365,offline,\nopen,open_folder,opened_folder,overflow,package,package_org,package_org_beta,page,palette,paste,\npeople,phone_landscape,phone_portrait,photo,picklist,power,preview,priority,process,push,puzzle,\nquestion,questions_and_answers,record,redo,refresh,relate,remove_formatting,remove_link,\nreplace,reply,reset_password,retweet,richtextbulletedlist,richtextindent,richtextnumberedlist,\nrichtextoutdent,right,right_align_text,rotate,rows,salesforce1,search,settings,setup,setup_assistant_guide,\nshare,share_post,shield,side_list,signpost,sms,snippet,socialshare,sort,spinner,standard_objects,\nstop,strikethrough,success,summary,summarydetail,switch,table,tablet_landscape,tablet_portrait,\ntabset,task,text_background_color,text_color,threedots,tile_card_list,topic,touch_action,trail,undelete,undeprecate,\nunderline,undo,unlock,unmuted,up,upload,user,user_role,volume_high,volume_low,volume_off,warning,\nweeklyview,world,zoomin,zoomout\n".replace(/^\s+|\s+$/g, '').split(/[\s,]+/);
/* eslint-enable max-len */

export var Icon = /*#__PURE__*/function (_Component) {
  _inherits(Icon, _Component);

  var _super = _createSuper(Icon);

  // eslint-disable-next-line react/sort-comp
  function Icon(props) {
    var _this;

    _classCallCheck(this, Icon);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "context", void 0);

    _defineProperty(_assertThisInitialized(_this), "iconContainer", void 0);

    _defineProperty(_assertThisInitialized(_this), "svgIcon", void 0);

    _this.state = {};
    _this.iconContainer = null;
    _this.svgIcon = null;
    registerStyle('icon', [['.slds-icon use', '{ pointer-events: none; }']]);
    return _this;
  }

  _createClass(Icon, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.checkIconColor();
      var svgEl = this.svgIcon;

      if (svgEl && this.props.tabIndex !== undefined) {
        svgEl.setAttribute('focusable', (this.props.tabIndex >= 0).toString());
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.checkIconColor();
    }
  }, {
    key: "getIconColor",
    value: function getIconColor(fillColor, category, icon) {
      /* eslint-disable no-unneeded-ternary */
      return this.state.iconColor ? this.state.iconColor : category === 'doctype' ? undefined : fillColor === 'none' ? undefined : fillColor ? fillColor : category === 'utility' ? undefined : category === 'custom' ? icon.replace(/^custom/, 'custom-') : category === 'action' && /^new_custom/.test(icon) ? icon.replace(/^new_custom/, 'custom-') : "".concat(category, "-").concat((icon || '').replace(/_/g, '-'));
      /* eslint-enable no-unneeded-ternary */
    }
  }, {
    key: "checkIconColor",
    value: function checkIconColor() {
      var _this$props = this.props,
          fillColor = _this$props.fillColor,
          _this$props$category = _this$props.category,
          category = _this$props$category === void 0 ? 'utility' : _this$props$category,
          container = _this$props.container;
      var iconColor = this.state.iconColor;

      if (fillColor || category === 'doctype' || !fillColor && category === 'utility' || iconColor === 'standard-default') {
        return;
      }

      var el = container ? this.iconContainer : this.svgIcon;

      if (!el) {
        return;
      }

      var bgColorStyle = getComputedStyle(el).backgroundColor; // if no background color set to the icon

      if (bgColorStyle && /^(transparent|rgba\(0,\s*0,\s*0,\s*0\))$/.test(bgColorStyle)) {
        this.setState({
          iconColor: 'standard-default'
        });
      }
    }
  }, {
    key: "renderSVG",
    value: function renderSVG(_ref) {
      var _classnames,
          _this2 = this;

      var _ref$className = _ref.className,
          className = _ref$className === void 0 ? '' : _ref$className,
          _ref$category = _ref.category,
          category = _ref$category === void 0 ? 'utility' : _ref$category,
          _ref$size = _ref.size,
          size = _ref$size === void 0 ? '' : _ref$size,
          icon = _ref.icon,
          align = _ref.align,
          fillColor = _ref.fillColor,
          container = _ref.container,
          _ref$textColor = _ref.textColor,
          textColor = _ref$textColor === void 0 ? 'default' : _ref$textColor,
          style = _ref.style,
          assetRoot = _ref.assetRoot,
          props = _objectWithoutProperties(_ref, ["className", "category", "size", "icon", "align", "fillColor", "container", "textColor", "style", "assetRoot"]);

      var iconColor = this.getIconColor(fillColor, category, icon);
      var iconClassNames = classnames((_classnames = {
        'slds-icon': !/slds-button__icon/.test(className)
      }, _defineProperty(_classnames, "slds-icon_".concat(size), /^(x-small|small|medium|large)$/.test(size)), _defineProperty(_classnames, "slds-icon-text-".concat(textColor), /^(default|warning|error)$/.test(textColor || '') && !iconColor), _defineProperty(_classnames, "slds-icon-".concat(iconColor), !container && iconColor), _defineProperty(_classnames, 'slds-m-left_x-small', align === 'right'), _defineProperty(_classnames, 'slds-m-right_x-small', align === 'left'), _classnames), className); // icon and category prop should not include chars other than alphanumerics, underscore, and hyphen

      icon = (icon || '').replace(/[^\w-]/g, ''); // eslint-disable-line no-param-reassign

      category = (category || '').replace(/[^\w-]/g, ''); // eslint-disable-line no-param-reassign

      var iconUrl = "".concat(assetRoot, "/icons/").concat(category, "-sprite/svg/symbols.svg#").concat(icon);
      return /*#__PURE__*/React.createElement("svg", _extends({
        className: iconClassNames,
        "aria-hidden": true,
        ref: function ref(node) {
          return _this2.svgIcon = node;
        },
        style: style
      }, props), /*#__PURE__*/React.createElement("use", {
        xlinkHref: iconUrl
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props2 = this.props,
          container = _this$props2.container,
          size = _this$props2.size,
          props = _objectWithoutProperties(_this$props2, ["container", "size"]);

      var _this$context$assetRo = this.context.assetRoot,
          assetRoot = _this$context$assetRo === void 0 ? getAssetRoot() : _this$context$assetRo;
      var category = props.category,
          icon = props.icon;

      if (icon.indexOf(':') > 0) {
        var _ref2 = icon.split(':');

        var _ref3 = _slicedToArray(_ref2, 2);

        category = _ref3[0];
        icon = _ref3[1];
      }

      if (container) {
        var containerClassName = props.containerClassName,
            fillColor = props.fillColor,
            pprops = _objectWithoutProperties(props, ["containerClassName", "fillColor"]);

        var iconColor = this.getIconColor(fillColor, category, icon);
        var ccontainerClassName = classnames(containerClassName, 'slds-icon_container', container === 'circle' ? 'slds-icon_container_circle' : null, iconColor ? "slds-icon-".concat(iconColor) : null);
        return /*#__PURE__*/React.createElement("span", {
          className: ccontainerClassName,
          ref: function ref(node) {
            return _this3.iconContainer = node;
          }
        }, this.renderSVG(_objectSpread(_objectSpread({}, pprops), {}, {
          size: size,
          category: category,
          icon: icon,
          fillColor: iconColor,
          container: container,
          assetRoot: assetRoot
        })));
      }

      return this.renderSVG(_objectSpread(_objectSpread({}, props), {}, {
        category: category,
        icon: icon,
        size: size,
        assetRoot: assetRoot
      }));
    }
  }]);

  return Icon;
}(Component);

_defineProperty(Icon, "contextTypes", {
  assetRoot: PropTypes.string
});

_defineProperty(Icon, "ICONS", {
  STANDARD_ICONS: STANDARD_ICONS,
  CUSTOM_ICONS: CUSTOM_ICONS,
  ACTION_ICONS: ACTION_ICONS,
  DOCTYPE_ICONS: DOCTYPE_ICONS,
  UTILITY_ICONS: UTILITY_ICONS
});
//# sourceMappingURL=Icon.js.map