import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function (_e) { function e(_x) { return _e.apply(this, arguments); } e.toString = function () { return _e.toString(); }; return e; }(function (e) { throw e; }), f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function (_e2) { function e(_x2) { return _e2.apply(this, arguments); } e.toString = function () { return _e2.toString(); }; return e; }(function (e) { didErr = true; err = e; }), f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import classnames from 'classnames';
import { autoAlign } from './AutoAlign';
import { Button } from './Button';
import { FormElement } from './FormElement';
import { Input } from './Input';
import { Icon } from './Icon';
import { Spinner } from './Spinner';
import { Pill } from './Pill';
import { DropdownButton } from './DropdownButton';
import { DropdownMenuItem } from './DropdownMenu';
import { uuid, isElInChildren, registerStyle } from './util';
/**
 *
 */

/**
 *
 */
export var LookupSelection = /*#__PURE__*/function (_Component) {
  _inherits(LookupSelection, _Component);

  var _super = _createSuper(LookupSelection);

  function LookupSelection() {
    var _this;

    _classCallCheck(this, LookupSelection);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "pill", null);

    _defineProperty(_assertThisInitialized(_this), "onKeyDown", function (e) {
      if (e.keyCode === 8 || e.keyCode === 46) {
        // Bacspace / DEL
        e.preventDefault();
        e.stopPropagation();

        if (_this.props.onResetSelection) {
          _this.props.onResetSelection();
        }
      }
    });

    return _this;
  }

  _createClass(LookupSelection, [{
    key: "renderPill",
    value: function renderPill(selected) {
      var _this2 = this;

      var onPillClick = function onPillClick(e) {
        e.currentTarget.focus();
        e.preventDefault();
        e.stopPropagation();
      };

      return /*#__PURE__*/React.createElement(Pill, {
        id: this.props.id,
        truncate: true,
        pillRef: function pillRef(node) {
          return _this2.pill = node;
        },
        onKeyDown: this.onKeyDown,
        onClick: onPillClick,
        tabIndex: 0,
        icon: selected.icon ? {
          category: selected.category,
          icon: selected.icon
        } : undefined,
        label: selected.label,
        onRemove: this.props.onResetSelection
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          hidden = _this$props.hidden,
          selected = _this$props.selected,
          lookupSelectionRef = _this$props.lookupSelectionRef;
      var lookupClassNames = classnames({
        'slds-hide': hidden
      });
      return /*#__PURE__*/React.createElement("div", {
        ref: lookupSelectionRef,
        className: lookupClassNames
      }, /*#__PURE__*/React.createElement("div", {
        className: "slds-pill__container"
      }, selected ? this.renderPill(selected) : undefined));
    }
  }]);

  return LookupSelection;
}(Component);

/**
 *
 */
export var LookupSearch = /*#__PURE__*/function (_Component2) {
  _inherits(LookupSearch, _Component2);

  var _super2 = _createSuper(LookupSearch);

  function LookupSearch(props) {
    var _this3;

    _classCallCheck(this, LookupSearch);

    _this3 = _super2.call(this, props);
    /* eslint-disable max-len */

    _defineProperty(_assertThisInitialized(_this3), "input", null);

    _defineProperty(_assertThisInitialized(_this3), "node", null);

    _defineProperty(_assertThisInitialized(_this3), "onLookupIconClick", function () {
      if (_this3.props.onSubmit) {
        _this3.props.onSubmit();
      }
    });

    _defineProperty(_assertThisInitialized(_this3), "onInputKeyDown", function (e) {
      if (e.keyCode === 13) {
        // return key
        e.preventDefault();
        e.stopPropagation();
        var _searchText = e.currentTarget.value;

        if (_searchText) {
          if (_this3.props.onSubmit) {
            _this3.props.onSubmit();
          }
        } else if (_this3.props.onComplete) {
          // if no search text, quit lookup search
          _this3.props.onComplete();
        }
      } else if (e.keyCode === 40) {
        // down key
        e.preventDefault();
        e.stopPropagation();

        if (_this3.props.onPressDown) {
          _this3.props.onPressDown();
        }
      } else if (e.keyCode === 27) {
        // ESC
        e.preventDefault();
        e.stopPropagation(); // quit lookup search (cancel)

        var _cancel = true;

        if (_this3.props.onComplete) {
          _this3.props.onComplete(_cancel);
        }
      }

      if (_this3.props.onKeyDown) {
        _this3.props.onKeyDown(e);
      }
    });

    _defineProperty(_assertThisInitialized(_this3), "onInputChange", function (e) {
      var searchText = e.target.value;

      if (_this3.props.onSearchTextChange) {
        _this3.props.onSearchTextChange(searchText);
      }
    });

    _defineProperty(_assertThisInitialized(_this3), "onInputBlur", function () {
      setTimeout(function () {
        if (!_this3.isFocusedInComponent()) {
          if (_this3.props.onBlur) {
            _this3.props.onBlur();
          }
        }
      }, 10);
    });

    _defineProperty(_assertThisInitialized(_this3), "handleLookupSearchRef", function (node) {
      _this3.node = node;
      var lookupSearchRef = _this3.props.lookupSearchRef;

      if (lookupSearchRef) {
        lookupSearchRef(node);
      }
    });

    registerStyle('lookupSearch', [['.slds-lookup[data-scope="multi"] .react-slds-lookup-scope-selector', '{ min-width: 3rem; }'], ['.slds-lookup[data-scope="multi"] .react-slds-lookup-scope-selector .slds-dropdown-trigger', '{ margin-left: 0; }'], ['.slds-lookup[data-scope="multi"] .react-slds-lookup-scope-selector .slds-dropdown-trigger .slds-button', '{ padding: 0 0.25rem; }'], ['.slds-lookup[data-scope="multi"] .slds-box_border', '{ background-color: white; }'], ['.slds-lookup[data-scope="multi"] .slds-box_border.react-slds-box-disabled', '{ background-color: #e0e5ee; border-color: #a8b7c7; cursor: not-allowed; }'], ['.slds-lookup[data-scope="multi"] .slds-box_border .slds-input_bare', '{ height: 2.15rem; width: 100%; }']]);
    return _this3;
  }

  _createClass(LookupSearch, [{
    key: "isFocusedInComponent",
    value: function isFocusedInComponent() {
      return isElInChildren(this.node, document.activeElement);
    }
  }, {
    key: "renderSearchInput",
    value: function renderSearchInput(props) {
      var _this4 = this;

      var className = props.className,
          hidden = props.hidden,
          searchText = props.searchText,
          _props$iconAlign = props.iconAlign,
          iconAlign = _props$iconAlign === void 0 ? 'right' : _props$iconAlign,
          scopes = props.scopes,
          targetScope = props.targetScope,
          onScopeMenuClick = props.onScopeMenuClick,
          onScopeSelect = props.onScopeSelect,
          onSearchTextChange = props.onSearchTextChange,
          onPressDown = props.onPressDown,
          onValueChange = props.onValueChange,
          onComplete = props.onComplete,
          lookupSearchRef = props.lookupSearchRef,
          pprops = _objectWithoutProperties(props, ["className", "hidden", "searchText", "iconAlign", "scopes", "targetScope", "onScopeMenuClick", "onScopeSelect", "onSearchTextChange", "onPressDown", "onValueChange", "onComplete", "lookupSearchRef"]);

      var searchInputClassNames = classnames('slds-grid', 'slds-input-has-icon', "slds-input-has-icon_".concat(iconAlign), {
        'slds-hide': hidden
      }, className);
      return /*#__PURE__*/React.createElement("div", {
        ref: this.handleLookupSearchRef,
        className: searchInputClassNames
      }, /*#__PURE__*/React.createElement(Input, _extends({}, pprops, {
        inputRef: function inputRef(node) {
          return _this4.input = node;
        },
        value: searchText,
        onKeyDown: this.onInputKeyDown,
        onChange: this.onInputChange,
        onBlur: this.onInputBlur
      })), /*#__PURE__*/React.createElement(Button, {
        type: "icon",
        icon: "search",
        disabled: props.disabled,
        className: "slds-input__icon slds-input__icon_right",
        tabIndex: -1,
        onClick: props.disabled ? undefined : this.onLookupIconClick,
        onBlur: this.onInputBlur
      }));
    }
  }, {
    key: "renderScopeSelector",
    value: function renderScopeSelector(_ref) {
      var scopes = _ref.scopes,
          target = _ref.targetScope,
          disabled = _ref.disabled;
      var targetScope = scopes[0] || {};

      var _iterator = _createForOfIteratorHelper(scopes),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var scope = _step.value;

          if (scope.value === target) {
            targetScope = scope;
            break;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      var icon = /*#__PURE__*/React.createElement(Icon, {
        icon: targetScope.icon || 'none',
        size: "x-small"
      });
      var selectorClassNames = classnames('slds-grid', 'slds-grid_align-center', 'slds-grid_vertical-align-center', 'react-slds-lookup-scope-selector');
      var _this$props2 = this.props,
          onScopeMenuClick = _this$props2.onScopeMenuClick,
          onScopeSelect = _this$props2.onScopeSelect;
      return /*#__PURE__*/React.createElement("div", {
        className: selectorClassNames
      }, /*#__PURE__*/React.createElement(DropdownButton, {
        label: icon,
        disabled: disabled,
        onClick: onScopeMenuClick,
        onMenuSelect: function onMenuSelect(v) {
          return onScopeSelect && onScopeSelect(String(v));
        },
        onBlur: this.onInputBlur
      }, scopes.map(function (scope) {
        return /*#__PURE__*/React.createElement(DropdownMenuItem, {
          key: scope.value,
          eventKey: scope.value,
          label: scope.label,
          icon: scope.icon
        });
      })));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          scopes = _this$props3.scopes,
          hidden = _this$props3.hidden,
          disabled = _this$props3.disabled,
          targetScope = _this$props3.targetScope,
          props = _objectWithoutProperties(_this$props3, ["scopes", "hidden", "disabled", "targetScope"]);

      if (scopes) {
        var lookupSearchClassNames = classnames('slds-grid', 'slds-form-element__control', 'slds-box_border', {
          'react-slds-box-disabled': disabled
        }, {
          'slds-hide': hidden
        });
        var styles = {
          WebkitFlexWrap: 'nowrap',
          msFlexWrap: 'nowrap',
          flexWrap: 'nowrap'
        };
        return /*#__PURE__*/React.createElement("div", {
          ref: this.handleLookupSearchRef,
          className: lookupSearchClassNames,
          style: styles
        }, this.renderScopeSelector({
          scopes: scopes,
          targetScope: targetScope,
          disabled: disabled
        }), this.renderSearchInput(_objectSpread(_objectSpread({}, props), {}, {
          disabled: disabled,
          className: 'slds-col',
          bare: true
        })));
      }

      return this.renderSearchInput(this.props);
    }
  }]);

  return LookupSearch;
}(Component);

/**
 *
 */
var LookupCandidateList = /*#__PURE__*/function (_Component3) {
  _inherits(LookupCandidateList, _Component3);

  var _super3 = _createSuper(LookupCandidateList);

  function LookupCandidateList() {
    var _this5;

    _classCallCheck(this, LookupCandidateList);

    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    _this5 = _super3.call.apply(_super3, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this5), "node", null);

    _defineProperty(_assertThisInitialized(_this5), "onKeyDown", function (e) {
      if (e.keyCode === 38 || e.keyCode === 40) {
        // UP/DOWN
        e.preventDefault();
        e.stopPropagation();
        var currentEl = e.target.parentElement;
        var itemEl = currentEl ? e.keyCode === 40 ? currentEl.nextSibling : currentEl.previousSibling : null;

        while (itemEl) {
          var anchorEl = itemEl.querySelector('.react-slds-candidate[tabIndex]');

          if (anchorEl && !anchorEl.disabled) {
            anchorEl.focus();
            return;
          }

          itemEl = e.keyCode === 40 ? itemEl.nextSibling : itemEl.previousSibling;
        }
      } else if (e.keyCode === 27) {
        // ESC
        e.preventDefault();
        e.stopPropagation();

        _this5.onSelect(null);
      }
    });

    _defineProperty(_assertThisInitialized(_this5), "renderCandidate", function (entry) {
      var category = entry.category,
          icon = entry.icon,
          label = entry.label,
          value = entry.value,
          meta = entry.meta;
      return /*#__PURE__*/React.createElement("li", {
        key: value,
        role: "presentation"
      }, /*#__PURE__*/React.createElement("a", {
        className: "slds-lookup__item-action react-slds-candidate",
        tabIndex: -1,
        role: "option",
        "aria-selected": false,
        onKeyDown: function onKeyDown(e) {
          return e.keyCode === 13 && _this5.onSelect(entry);
        },
        onBlur: _this5.props.onBlur,
        onClick: function onClick() {
          return _this5.onSelect(entry);
        }
      }, /*#__PURE__*/React.createElement("span", {
        className: "slds-truncate",
        style: {
          display: 'inline-flex',
          alignItems: 'center'
        }
      }, icon ? /*#__PURE__*/React.createElement(Icon, {
        style: {
          minWidth: '1.5rem'
        },
        className: "slds-m-right_x-small",
        category: category,
        icon: icon,
        size: "small"
      }) : undefined, /*#__PURE__*/React.createElement("div", {
        className: "slds-truncate"
      }, /*#__PURE__*/React.createElement("span", {
        className: "slds-lookup__result-text slds-truncate"
      }, label), meta ? /*#__PURE__*/React.createElement("span", {
        className: "slds-lookup__result-meta slds-truncate"
      }, meta) : undefined))));
    });

    return _this5;
  }

  _createClass(LookupCandidateList, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.focus) {
        this.focusToTargetItemEl(0);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this6 = this;

      if (this.props.focus && !prevProps.focus) {
        setTimeout(function () {
          _this6.focusToTargetItemEl(0);
        }, 10);
      }
    }
  }, {
    key: "onSelect",
    value: function onSelect(entry) {
      if (this.props.onSelect) {
        this.props.onSelect(entry);
      }
    }
  }, {
    key: "focusToTargetItemEl",
    value: function focusToTargetItemEl(index) {
      var el = this.node;

      if (!el) {
        return;
      }

      var anchors = el.querySelectorAll('.react-slds-candidate[tabIndex]');

      if (anchors[index]) {
        anchors[index].focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this7 = this;

      var trueFilter = function trueFilter() {
        return true;
      };

      var _this$props4 = this.props,
          _this$props4$data = _this$props4.data,
          data = _this$props4$data === void 0 ? [] : _this$props4$data,
          loading = _this$props4.loading,
          header = _this$props4.header,
          footer = _this$props4.footer,
          _this$props4$filter = _this$props4.filter,
          filter = _this$props4$filter === void 0 ? trueFilter : _this$props4$filter,
          alignment = _this$props4.alignment,
          listRef = _this$props4.listRef;
      var lookupMenuClassNames = classnames('slds-lookup__menu', 'slds-show');

      var _alignment = _slicedToArray(alignment, 2),
          vertAlign = _alignment[0],
          align = _alignment[1];

      var listStyles = _objectSpread(_objectSpread({
        minWidth: '15rem'
      }, vertAlign === 'bottom' ? {
        bottom: '100%'
      } : {}), align === 'right' ? {
        left: 'auto',
        right: 0
      } : {});

      var handleDOMRef = function handleDOMRef(node) {
        _this7.node = node;

        if (listRef) {
          listRef(node);
        }
      };

      return (
        /*#__PURE__*/
        // eslint-disable-next-line jsx-a11y/interactive-supports-focus
        React.createElement("div", {
          ref: handleDOMRef,
          className: lookupMenuClassNames,
          style: listStyles,
          role: "listbox",
          onKeyDown: this.onKeyDown
        }, header ? /*#__PURE__*/React.createElement("div", {
          className: "slds-lookup__item"
        }, header) : undefined, /*#__PURE__*/React.createElement("ul", {
          className: "slds-lookup__list",
          role: "presentation"
        }, data.filter(filter).map(this.renderCandidate), loading ? /*#__PURE__*/React.createElement("li", {
          className: "slds-lookup__item",
          key: "loading",
          style: {
            height: 20
          }
        }, /*#__PURE__*/React.createElement(Spinner, {
          container: false,
          size: "small",
          style: {
            margin: '0 auto'
          }
        })) : undefined), footer ? /*#__PURE__*/React.createElement("div", {
          className: "slds-lookup__item"
        }, footer) : undefined)
      );
    }
  }]);

  return LookupCandidateList;
}(Component);

var LookupCandidateListPortal = autoAlign({
  triggerSelector: '.slds-lookup',
  alignmentStyle: 'menu'
})(LookupCandidateList);

/**
 *
 */
export var Lookup = /*#__PURE__*/function (_Component4) {
  _inherits(Lookup, _Component4);

  var _super4 = _createSuper(Lookup);

  // eslint-disable-next-line react/sort-comp
  function Lookup(props) {
    var _this8;

    _classCallCheck(this, Lookup);

    _this8 = _super4.call(this, props);

    _defineProperty(_assertThisInitialized(_this8), "node", null);

    _defineProperty(_assertThisInitialized(_this8), "selection", null);

    _defineProperty(_assertThisInitialized(_this8), "candidateList", null);

    _defineProperty(_assertThisInitialized(_this8), "search", void 0);

    _defineProperty(_assertThisInitialized(_this8), "onScopeMenuClick", function (e) {
      _this8.setState({
        opened: false
      });

      if (_this8.props.onScopeMenuClick) {
        _this8.props.onScopeMenuClick(e);
      }
    });

    _defineProperty(_assertThisInitialized(_this8), "onScopeSelect", function (targetScope) {
      _this8.setState({
        targetScope: targetScope
      });

      if (_this8.props.onScopeSelect) {
        _this8.props.onScopeSelect(targetScope);
      }
    });

    _defineProperty(_assertThisInitialized(_this8), "onSearchTextChange", function (searchText) {
      _this8.setState({
        searchText: searchText
      });

      if (_this8.props.onSearchTextChange) {
        _this8.props.onSearchTextChange(searchText);
      }
    });

    _defineProperty(_assertThisInitialized(_this8), "onLookupRequest", function (searchText) {
      _this8.setState({
        opened: true
      });

      if (_this8.props.onLookupRequest) {
        _this8.props.onLookupRequest(searchText);
      }
    });

    _this8.state = {
      id: "form-element-".concat(uuid()),
      selected: props.defaultSelected,
      opened: props.defaultOpened,
      searchText: props.defaultSearchText,
      targetScope: props.defaultTargetScope,
      focusFirstCandidate: false
    };
    return _this8;
  }

  _createClass(Lookup, [{
    key: "onResetSelection",
    value: function onResetSelection() {
      var _this9 = this;

      this.setState({
        selected: null
      });

      if (this.props.onSelect) {
        this.props.onSelect(null);
      }

      this.onSearchTextChange('');
      this.onLookupRequest('');
      setTimeout(function () {
        var searchElem = _this9.search;
        var inputElem = searchElem && searchElem.querySelector('input');

        if (!inputElem) {
          return;
        }

        inputElem.focus();
      }, 10);
    }
  }, {
    key: "onLookupItemSelect",
    value: function onLookupItemSelect(selected) {
      var _this10 = this;

      if (selected) {
        this.setState({
          selected: selected,
          opened: false
        });

        if (this.props.onSelect) {
          this.props.onSelect(selected);
        }

        setTimeout(function () {
          var selectionElem = _this10.selection;
          var pillElem = selectionElem && selectionElem.querySelector('a');

          if (pillElem) {
            pillElem.focus();
          }
        }, 10);
      } else {
        this.setState({
          opened: false
        });
        setTimeout(function () {
          var searchElem = _this10.search;
          var inputElem = searchElem.querySelector('input');
          inputElem.focus();
        }, 10);
      }

      if (this.props.onComplete) {
        this.props.onComplete(); // tell the component container to quit lookup
      }
    }
  }, {
    key: "onFocusFirstCandidate",
    value: function onFocusFirstCandidate() {
      var _this11 = this;

      var _this$props$opened = this.props.opened,
          opened = _this$props$opened === void 0 ? this.state.opened : _this$props$opened;

      if (!opened) {
        this.onLookupRequest(this.state.searchText || '');
      } else {
        this.setState({
          focusFirstCandidate: true
        });
        setTimeout(function () {
          _this11.setState({
            focusFirstCandidate: false
          });
        }, 10);
      }
    }
  }, {
    key: "onBlur",
    value: function onBlur() {
      var _this12 = this;

      setTimeout(function () {
        if (!_this12.isFocusedInComponent()) {
          _this12.setState({
            opened: false
          });

          if (_this12.props.onBlur) {
            _this12.props.onBlur();
          }

          if (_this12.props.onComplete) {
            _this12.props.onComplete(true); // quit lookup (cancel)

          }
        }
      }, 10);
    }
  }, {
    key: "isFocusedInComponent",
    value: function isFocusedInComponent() {
      var targetEl = document.activeElement;
      return isElInChildren(this.node, targetEl) || isElInChildren(this.candidateList, targetEl);
    }
  }, {
    key: "render",
    value: function render() {
      var _this13 = this;

      var id = this.props.id || this.state.id;

      var _this$props5 = this.props,
          totalCols = _this$props5.totalCols,
          cols = _this$props5.cols,
          label = _this$props5.label,
          required = _this$props5.required,
          error = _this$props5.error,
          className = _this$props5.className,
          _this$props5$selected = _this$props5.selected,
          selected = _this$props5$selected === void 0 ? this.state.selected : _this$props5$selected,
          _this$props5$opened = _this$props5.opened,
          opened = _this$props5$opened === void 0 ? this.state.opened : _this$props5$opened,
          _this$props5$searchTe = _this$props5.searchText,
          searchText = _this$props5$searchTe === void 0 ? this.state.searchText : _this$props5$searchTe,
          _this$props5$targetSc = _this$props5.targetScope,
          targetScope = _this$props5$targetSc === void 0 ? this.state.targetScope : _this$props5$targetSc,
          loading = _this$props5.loading,
          lookupFilter = _this$props5.lookupFilter,
          listHeader = _this$props5.listHeader,
          listFooter = _this$props5.listFooter,
          data = _this$props5.data,
          onComplete = _this$props5.onComplete,
          props = _objectWithoutProperties(_this$props5, ["totalCols", "cols", "label", "required", "error", "className", "selected", "opened", "searchText", "targetScope", "loading", "lookupFilter", "listHeader", "listFooter", "data", "onComplete"]);

      var lookupClassNames = classnames('slds-lookup', {
        'slds-has-selection': selected
      }, className);
      var formElemProps = {
        id: id,
        totalCols: totalCols,
        cols: cols,
        label: label,
        required: required,
        error: error
      };
      /* eslint-disable @typescript-eslint/no-unused-vars */

      var defaultSelected = props.defaultSelected,
          defaultOpened = props.defaultOpened,
          defaultSearchText = props.defaultSearchText,
          defaultTargetScope = props.defaultTargetScope,
          onSelect = props.onSelect,
          onBlur = props.onBlur,
          onScopeSelect = props.onScopeSelect,
          onScopeMenuClick = props.onScopeMenuClick,
          onSearchTextChange = props.onSearchTextChange,
          onLookupRequest = props.onLookupRequest,
          searchProps = _objectWithoutProperties(props, ["defaultSelected", "defaultOpened", "defaultSearchText", "defaultTargetScope", "onSelect", "onBlur", "onScopeSelect", "onScopeMenuClick", "onSearchTextChange", "onLookupRequest"]);
      /* eslint-enable @typescript-eslint/no-unused-vars */


      return /*#__PURE__*/React.createElement(FormElement, _extends({
        formElementRef: function formElementRef(node) {
          return _this13.node = node;
        }
      }, formElemProps), /*#__PURE__*/React.createElement("div", {
        className: lookupClassNames,
        ref: function ref(node) {
          return _this13.node = node;
        },
        "data-select": "single",
        "data-scope": props.scopes ? 'multi' : 'single',
        "data-typeahead": false
      }, selected ? /*#__PURE__*/React.createElement(LookupSelection, {
        id: id,
        lookupSelectionRef: function lookupSelectionRef(node) {
          return _this13.selection = node;
        },
        selected: selected,
        onResetSelection: this.onResetSelection.bind(this)
      }) : /*#__PURE__*/React.createElement(LookupSearch, _extends({}, searchProps, {
        id: id,
        lookupSearchRef: function lookupSearchRef(node) {
          return _this13.search = node;
        },
        searchText: searchText,
        targetScope: targetScope,
        onScopeMenuClick: this.onScopeMenuClick,
        onScopeSelect: this.onScopeSelect,
        onSearchTextChange: this.onSearchTextChange,
        onSubmit: function onSubmit() {
          return _this13.onLookupRequest(searchText || '');
        },
        onPressDown: this.onFocusFirstCandidate.bind(this),
        onComplete: onComplete,
        onBlur: this.onBlur.bind(this)
      })), opened ? /*#__PURE__*/React.createElement(LookupCandidateListPortal, {
        portalClassName: lookupClassNames,
        listRef: function listRef(node) {
          return _this13.candidateList = node;
        },
        data: data,
        focus: this.state.focusFirstCandidate,
        loading: loading,
        filter: lookupFilter ? function (entry) {
          return lookupFilter(entry, searchText, targetScope);
        } : undefined,
        header: listHeader,
        footer: listFooter,
        onSelect: this.onLookupItemSelect.bind(this),
        onBlur: this.onBlur.bind(this)
      }) : undefined));
    }
  }]);

  return Lookup;
}(Component);

_defineProperty(Lookup, "isFormElement", true);
//# sourceMappingURL=Lookup.js.map