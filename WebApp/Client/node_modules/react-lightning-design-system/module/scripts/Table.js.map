{"version":3,"sources":["../../src/scripts/Table.tsx"],"names":["React","Component","classnames","Icon","TableHeader","props","children","sortable","hasActions","actionsPosition","nextChildren","className","Children","forEach","child","index","childSortable","push","cloneElement","key","slice","renderBaseHeaderRow","TableBody","map","innerChild","isValidElement","truncate","renderRows","TableRow","selected","style","Object","assign","backgroundColor","borderLeft","TableHeaderColumn","resizable","width","sortDir","onSort","sorted","align","pprops","oClassNames","minWidth","icon","e","preventDefault","position","TableRowColumn","undefined","TableRowColumnActions","Table","elements","document","getElementsByClassName","length","childNodes","blur","base","bordered","verticalBorders","noRowHover","striped","fixedLayout","autoWidth","wrapperStyle","tableClassNames","wrapStyle","overflowY","overflowX","tBody","tHead","type","renderTableHeader","renderTableBody","onScroll","bind"],"mappings":"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","sourcesContent":["import React, {\n  Component,\n  CSSProperties,\n  ThHTMLAttributes,\n  HTMLAttributes,\n  TableHTMLAttributes,\n  TdHTMLAttributes,\n} from 'react';\nimport classnames from 'classnames';\n\nimport { Icon } from './Icon';\n\nexport type TableHeaderProps = {\n  hasActions?: boolean;\n  actionsPosition?: number;\n  sortable?: boolean;\n};\n\nexport class TableHeader extends Component<TableHeaderProps> {\n  renderBaseHeaderRow() {\n    const { children, sortable, hasActions, actionsPosition = 0 } = this.props;\n    let nextChildren: any = [];\n\n    const props = {\n      className: 'slds-text-title_caps',\n    };\n\n    React.Children.forEach((children as any).props.children, (child, index) => {\n      const childSortable = child.props.sortable;\n      nextChildren.push(\n        React.cloneElement(child, {\n          // eslint-disable-next-line react/no-array-index-key\n          key: index,\n          sortable:\n            typeof childSortable === 'undefined' ? sortable : childSortable,\n        })\n      );\n    });\n\n    if (hasActions) {\n      nextChildren = [\n        ...nextChildren.slice(0, actionsPosition),\n        <TableHeaderColumn\n          sortable={false}\n          width={50}\n          key={-1}\n          className='slds-cell-shrink'\n        />,\n        ...nextChildren.slice(actionsPosition),\n      ];\n    }\n\n    return React.cloneElement(children as any, props, nextChildren);\n  }\n\n  render() {\n    return <thead>{this.renderBaseHeaderRow()}</thead>;\n  }\n}\n\nexport class TableBody extends Component {\n  renderRows() {\n    return React.Children.map(this.props.children, (child: any) => {\n      const children: any = [];\n\n      React.Children.forEach(child.props.children, (innerChild, index) => {\n        if (!React.isValidElement(innerChild)) return;\n        const { truncate } = innerChild.props as any;\n        const props: any = {\n          key: index,\n        };\n        if (typeof truncate !== 'undefined') props.truncate = truncate;\n        children.push(React.cloneElement(innerChild, props));\n      });\n\n      return React.cloneElement(\n        child,\n        { className: 'slds-hint-parent' },\n        children\n      );\n    });\n  }\n\n  render() {\n    return <tbody>{this.renderRows()}</tbody>;\n  }\n}\n\nexport type TableRowProps = {\n  selected?: boolean;\n  style?: object;\n} & HTMLAttributes<HTMLTableRowElement>;\n\nexport const TableRow: React.FC<TableRowProps> = ({ selected, ...props }) => {\n  let { style } = props;\n\n  if (selected) {\n    style = Object.assign({}, style, {\n      backgroundColor: '#F8FCF5',\n      borderLeft: '2px solid #7db450',\n    });\n  }\n\n  return (\n    <tr {...props} style={style}>\n      {props.children}\n    </tr>\n  );\n};\n\nexport type TableHeaderColumnProps = {\n  className?: string;\n  width?: string | number;\n  sortable?: boolean;\n  resizable?: boolean;\n  sortDir?: string;\n  sorted?: boolean;\n  align?: 'left' | 'center' | 'right';\n  onSort?: () => void;\n} & ThHTMLAttributes<HTMLTableHeaderCellElement>;\n\nexport const TableHeaderColumn: React.FC<TableHeaderColumnProps> = (props) => {\n  const {\n    sortable,\n    resizable,\n    children,\n    className,\n    width,\n    sortDir,\n    onSort,\n    sorted,\n    align,\n    ...pprops\n  } = props;\n  const oClassNames = classnames(\n    className,\n    'slds-text-title_caps slds-truncate',\n    {\n      'slds-is-sortable': sortable,\n      'slds-is-resizable': resizable,\n      'slds-is-sorted': sorted,\n      [`slds-text-align_${align}`]: align,\n    }\n  );\n\n  const style = { minWidth: width || 'auto' };\n\n  const icon = sortDir === 'DESC' ? 'arrowdown' : 'arrowup';\n\n  return (\n    <th {...pprops} className={oClassNames} scope='col' style={style}>\n      {sortable ? (\n        <a\n          onClick={(e) => {\n            e.preventDefault();\n            if (onSort) {\n              onSort();\n            }\n          }}\n          className='slds-th__action slds-text-link_reset'\n        >\n          <span className='slds-assistive-text'>Sort </span>\n          <span className='slds-truncate'>{children}</span>\n          <Icon\n            className='slds-is-sortable__icon'\n            textColor='default'\n            container\n            size='x-small'\n            category='utility'\n            icon={icon}\n            style={{ position: 'absolute' }}\n          />\n          <span\n            className='slds-assistive-text'\n            aria-live='assertive'\n            aria-atomic='true'\n          />\n        </a>\n      ) : (\n        children\n      )}\n    </th>\n  );\n};\n\nexport type TableRowColumnProps = {\n  width?: string | number;\n  truncate?: boolean;\n} & TdHTMLAttributes<HTMLTableDataCellElement>;\n\nexport const TableRowColumn: React.FC<TableRowColumnProps> = (props) => {\n  const { truncate = true, className, width, children, ...pprops } = props;\n  const oClassNames = classnames(className, {\n    'slds-truncate': truncate,\n  });\n  const style: CSSProperties = {};\n  if (width !== undefined) style.width = width;\n  if (!truncate) style.position = 'static';\n\n  return (\n    <td role='gridcell' style={style} className={oClassNames} {...pprops}>\n      {children}\n    </td>\n  );\n};\n\nexport const TableRowColumnActions: React.FC = (props) => (\n  <TableRowColumn\n    className='slds-cell-shrink'\n    data-label='Actions'\n    truncate={false}\n    width={50}\n    style={{ position: 'static' }}\n  >\n    {props.children}\n  </TableRowColumn>\n);\n\nexport type TableProps = {\n  wrapperStyle?: CSSProperties;\n  bordered?: boolean;\n  verticalBorders?: boolean;\n  noRowHover?: boolean;\n  striped?: boolean;\n  fixedLayout?: boolean;\n  sortable?: boolean;\n  autoWidth?: boolean;\n} & TableHTMLAttributes<HTMLTableElement>;\n\nexport class Table extends Component<TableProps> {\n  onScroll() {\n    const elements = document.getElementsByClassName(\n      'react-slds-dropdown-opened'\n    );\n    if (elements.length) (elements[0].childNodes[0] as any).blur();\n  }\n\n  renderTableHeader(base: any) {\n    const { sortable } = this.props;\n    return React.cloneElement(base, { sortable });\n  }\n\n  renderTableBody(base: any) {\n    return base;\n  }\n\n  render() {\n    const {\n      className,\n      bordered,\n      verticalBorders,\n      noRowHover,\n      striped,\n      fixedLayout,\n      children,\n      autoWidth,\n      wrapperStyle,\n      ...pprops\n    } = this.props;\n    delete pprops.sortable;\n\n    const tableClassNames = classnames(\n      className,\n      'slds-table slds-table_cell-buffer',\n      {\n        'slds-table_bordered': bordered,\n        'slds-no-row-hover': noRowHover,\n        'slds-table_striped': striped,\n        'slds-table_fixed-layout': fixedLayout,\n        'slds-table_col-bordered': verticalBorders,\n      }\n    );\n\n    const wrapStyle: CSSProperties = Object.assign(\n      {\n        overflowY: 'hidden',\n        overflowX: 'auto',\n      },\n      wrapperStyle\n    );\n\n    const style: CSSProperties = {};\n    if (autoWidth) style.width = 'auto';\n\n    let tBody;\n    let tHead;\n\n    React.Children.forEach(children, (child) => {\n      if (!React.isValidElement(child)) return;\n      if (child.type === TableHeader) {\n        tHead = this.renderTableHeader(child);\n      } else if (child.type === TableBody) {\n        tBody = this.renderTableBody(child);\n      }\n    });\n\n    return (\n      <div>\n        <div style={wrapStyle} onScroll={this.onScroll.bind(this)}>\n          <table className={tableClassNames} style={style} {...pprops}>\n            {tHead}\n            {tBody}\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"Table.js"}