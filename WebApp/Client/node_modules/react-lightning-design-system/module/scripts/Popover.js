import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _extends from "@babel/runtime/helpers/extends";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import classnames from 'classnames';
import { autoAlign } from './AutoAlign';
export var PopoverHeader = function PopoverHeader(props) {
  return /*#__PURE__*/React.createElement("div", {
    className: "slds-popover__header"
  }, props.children);
};
export var PopoverBody = function PopoverBody(props) {
  return /*#__PURE__*/React.createElement("div", _extends({
    className: "slds-popover__body"
  }, props), props.children);
};

var PopoverInner = /*#__PURE__*/function (_React$Component) {
  _inherits(PopoverInner, _React$Component);

  var _super = _createSuper(PopoverInner);

  function PopoverInner() {
    var _this;

    _classCallCheck(this, PopoverInner);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "node", null);

    return _this;
  }

  _createClass(PopoverInner, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          children = _this$props.children,
          alignment = _this$props.alignment,
          hidden = _this$props.hidden,
          theme = _this$props.theme,
          tooltip = _this$props.tooltip,
          style = _this$props.style,
          bodyStyle = _this$props.bodyStyle,
          props = _objectWithoutProperties(_this$props, ["children", "alignment", "hidden", "theme", "tooltip", "style", "bodyStyle"]);

      var nubbinPosition = alignment.join('-');

      var _alignment = _slicedToArray(alignment, 2),
          firstAlign = _alignment[0],
          secondAlign = _alignment[1];

      var popoverClassNames = classnames('slds-popover', {
        'slds-hide': hidden,
        'slds-popover_tooltip': tooltip
      }, "slds-nubbin_".concat(nubbinPosition), "slds-m-".concat(firstAlign, "_small"), theme ? "slds-theme_".concat(theme) : undefined);

      var rootStyle = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, style), {}, _defineProperty({
        position: 'absolute'
      }, firstAlign, 0), secondAlign ? _defineProperty({}, secondAlign, 0) : {}), tooltip ? {
        width: 'max-content'
      } : {}), {}, {
        transform: secondAlign === undefined ? firstAlign === 'top' || firstAlign === 'bottom' ? 'translateX(-50%)' : firstAlign === 'left' || firstAlign === 'right' ? 'translateY(-50%)' : undefined : undefined
      });

      return /*#__PURE__*/React.createElement("div", _extends({
        ref: function ref(node) {
          return _this2.node = node;
        },
        className: popoverClassNames,
        role: tooltip ? 'tooltip' : 'dialog',
        style: rootStyle
      }, props), /*#__PURE__*/React.createElement(PopoverBody, {
        style: bodyStyle
      }, children));
    }
  }]);

  return PopoverInner;
}(React.Component);
/**
 *
 */


function map(Cmp, fn) {
  return function (p1) {
    return /*#__PURE__*/React.createElement(Cmp, fn(p1));
  };
}
/**
 *
 */


export var Popover = map(autoAlign({
  triggerSelector: '.slds-dropdown-trigger',
  alignmentStyle: 'popover'
})(PopoverInner), function (_ref2) {
  var position = _ref2.position,
      props = _objectWithoutProperties(_ref2, ["position"]);

  var alignment = position ? position.split('-') : undefined;
  return _objectSpread({
    alignment: alignment
  }, props);
});
Popover.displayName = 'Popover';
//# sourceMappingURL=Popover.js.map