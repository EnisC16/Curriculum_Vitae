{"version":3,"sources":["../../src/scripts/Notification.tsx"],"names":["React","classnames","Button","Icon","NOTIFICATION_TYPES","NOTIFICATION_LEVELS","Notification","props","className","type","level","alt","alertTexture","icon","iconSize","onClose","children","pprops","typeClassName","indexOf","levelClassName","alertClassNames","iconEl","undefined","Alert","Toast"],"mappings":"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","sourcesContent":["import React, { MouseEvent, HTMLAttributes } from 'react';\nimport classnames from 'classnames';\nimport { Button } from './Button';\nimport { Icon, IconSize } from './Icon';\n\nconst NOTIFICATION_TYPES = ['alert', 'toast'] as const;\n\nconst NOTIFICATION_LEVELS = ['info', 'success', 'warning', 'error'] as const;\n\nexport type NotificationType = typeof NOTIFICATION_TYPES[number];\nexport type NotificationLevel = typeof NOTIFICATION_LEVELS[number];\n\nexport type NotificationProps = {\n  type?: NotificationType;\n  level?: NotificationLevel;\n  alt?: string;\n  icon?: string;\n  iconSize?: IconSize;\n  alertTexture?: boolean;\n  onClose?: (e: MouseEvent<HTMLButtonElement>) => void;\n} & HTMLAttributes<HTMLDivElement>;\n\nexport const Notification: React.FC<NotificationProps> = (props) => {\n  const {\n    className,\n    type,\n    level,\n    alt,\n    alertTexture = true,\n    icon,\n    iconSize = 'small',\n    onClose,\n    children,\n    ...pprops\n  } = props;\n  const typeClassName =\n    type && NOTIFICATION_TYPES.indexOf(type) >= 0\n      ? `slds-notify_${type}`\n      : null;\n  const levelClassName =\n    level && NOTIFICATION_LEVELS.indexOf(level) >= 0\n      ? `slds-theme_${level}`\n      : null;\n  const alertClassNames = classnames(\n    className,\n    'slds-notify',\n    typeClassName,\n    levelClassName,\n    alertTexture ? 'slds-theme_alert-texture' : null\n  );\n\n  const iconEl = icon ? (\n    <Icon\n      className={\n        type === 'toast' ? 'slds-m-right_small' : 'slds-m-right_x-small'\n      }\n      icon={icon}\n      size={iconSize}\n      fillColor='none'\n      textColor={level === 'warning' ? 'default' : null}\n    />\n  ) : (\n    undefined\n  );\n\n  return (\n    <div className={alertClassNames} role='alert' {...pprops}>\n      {alt ? <span className='slds-assistive-text'>{alt}</span> : undefined}\n      {onClose ? (\n        <Button\n          className='slds-notify__close'\n          type='icon-inverse'\n          icon='close'\n          iconSize={type === 'toast' ? 'large' : 'small'}\n          alt='Close'\n          onClick={onClose}\n        />\n      ) : (\n        undefined\n      )}\n      {type === 'toast' ? (\n        <div className='slds-notify__content slds-grid'>\n          {iconEl}\n          <div className='slds-col slds-align-middle'>\n            <h2 className='slds-text-heading_small'>{children}</h2>\n          </div>\n        </div>\n      ) : (\n        <h2>\n          {iconEl}\n          {children}\n        </h2>\n      )}\n    </div>\n  );\n};\n\nexport type AlertProps = Omit<NotificationProps, 'type'>;\nexport const Alert: React.FC<AlertProps> = (props) => (\n  <Notification {...props} type='alert' />\n);\n\nexport type ToastProps = Omit<NotificationProps, 'type'>;\nexport const Toast: React.FC<ToastProps> = (props) => (\n  <Notification {...props} type='toast' />\n);\n"],"file":"Notification.js"}